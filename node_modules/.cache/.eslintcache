[{"D:\\Project\\client\\src\\index.tsx":"1","D:\\Project\\client\\src\\reportWebVitals.ts":"2","D:\\Project\\client\\src\\App\\Layout\\App.tsx":"3","D:\\Project\\client\\src\\App\\Layout\\Header.tsx":"4","D:\\Project\\client\\src\\Features\\Catalog\\Catalog.tsx":"5","D:\\Project\\client\\src\\Features\\Contact\\Contact.tsx":"6","D:\\Project\\client\\src\\Features\\Catalog\\ProductDetails.tsx":"7","D:\\Project\\client\\src\\Features\\About\\About.tsx":"8","D:\\Project\\client\\src\\Features\\Home\\Home.tsx":"9","D:\\Project\\client\\src\\Features\\Catalog\\ProductList.tsx":"10","D:\\Project\\client\\src\\Features\\Catalog\\ProductCard.tsx":"11","D:\\Project\\client\\src\\App\\Api\\Agent.ts":"12","D:\\Project\\client\\src\\App\\Errors\\ServerError.tsx":"13","D:\\Project\\client\\src\\App\\Errors\\NotFound.tsx":"14","D:\\Project\\client\\src\\App\\Layout\\LoadingComponent.tsx":"15","D:\\Project\\client\\src\\Features\\Basket\\BasketPage.tsx":"16","D:\\Project\\client\\src\\App\\Util\\Util.ts":"17","D:\\Project\\client\\src\\Features\\Basket\\BasketSummary.tsx":"18","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutPage.tsx":"19","D:\\Project\\client\\src\\App\\Store\\ConfigureStore.ts":"20","D:\\Project\\client\\src\\Features\\Basket\\BasketSlice.ts":"21","D:\\Project\\client\\src\\Features\\Catalog\\CatalogSlice.ts":"22","D:\\Project\\client\\src\\Features\\Catalog\\ProductSearch.tsx":"23","D:\\Project\\client\\src\\App\\Components\\RadioButtonGroup.tsx":"24","D:\\Project\\client\\src\\App\\Components\\CheckBoxButtons.tsx":"25","D:\\Project\\client\\src\\App\\Models\\pagination.ts":"26","D:\\Project\\client\\src\\App\\Components\\AppPagination.tsx":"27","D:\\Project\\client\\src\\Features\\Catalog\\ProductCardSkeleton.tsx":"28","D:\\Project\\client\\src\\Features\\Account\\Register.tsx":"29","D:\\Project\\client\\src\\Features\\Account\\Login.tsx":"30","D:\\Project\\client\\src\\Features\\Account\\AccountSlice.ts":"31","D:\\Project\\client\\src\\App\\Models\\User.ts":"32","D:\\Project\\client\\src\\App\\Layout\\SignedInMenu.tsx":"33","D:\\Project\\client\\src\\App\\Layout\\PrivateRoute.tsx":"34","D:\\Project\\client\\src\\Features\\Checkout\\PaymentForm.tsx":"35","D:\\Project\\client\\src\\Features\\Checkout\\AddressForm.tsx":"36","D:\\Project\\client\\src\\Features\\Checkout\\Review.tsx":"37","D:\\Project\\client\\src\\App\\Components\\AppTextInput.tsx":"38","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutValidation.ts":"39","D:\\Project\\client\\src\\Features\\Basket\\BasketTable.tsx":"40","D:\\Project\\client\\src\\Features\\Orders\\Orders.tsx":"41","D:\\Project\\client\\src\\App\\Models\\Order.ts":"42","D:\\Project\\client\\src\\Features\\Orders\\OrderDetail.tsx":"43"},{"size":952,"mtime":1665384500361,"results":"44","hashOfConfig":"45"},{"size":440,"mtime":1663326605000,"results":"46","hashOfConfig":"45"},{"size":3662,"mtime":1668037415292,"results":"47","hashOfConfig":"45"},{"size":3967,"mtime":1666313128558,"results":"48","hashOfConfig":"45"},{"size":2839,"mtime":1666345857888,"results":"49","hashOfConfig":"45"},{"size":168,"mtime":1663327629000,"results":"50","hashOfConfig":"45"},{"size":4080,"mtime":1665961883777,"results":"51","hashOfConfig":"45"},{"size":182,"mtime":1667864351104,"results":"52","hashOfConfig":"45"},{"size":161,"mtime":1663327649000,"results":"53","hashOfConfig":"45"},{"size":1022,"mtime":1666345805999,"results":"54","hashOfConfig":"45"},{"size":2220,"mtime":1667871901225,"results":"55","hashOfConfig":"45"},{"size":3562,"mtime":1667865017373,"results":"56","hashOfConfig":"45"},{"size":1043,"mtime":1666306163926,"results":"57","hashOfConfig":"45"},{"size":640,"mtime":1664443127144,"results":"58","hashOfConfig":"45"},{"size":650,"mtime":1664444837349,"results":"59","hashOfConfig":"45"},{"size":938,"mtime":1667863886113,"results":"60","hashOfConfig":"45"},{"size":149,"mtime":1664514761947,"results":"61","hashOfConfig":"45"},{"size":1764,"mtime":1665360490594,"results":"62","hashOfConfig":"45"},{"size":4784,"mtime":1668038703859,"results":"63","hashOfConfig":"45"},{"size":780,"mtime":1666308008319,"results":"64","hashOfConfig":"45"},{"size":2742,"mtime":1667173491526,"results":"65","hashOfConfig":"45"},{"size":5255,"mtime":1666079351859,"results":"66","hashOfConfig":"45"},{"size":1019,"mtime":1665961420083,"results":"67","hashOfConfig":"45"},{"size":626,"mtime":1665962906927,"results":"68","hashOfConfig":"45"},{"size":1054,"mtime":1665965934413,"results":"69","hashOfConfig":"45"},{"size":323,"mtime":1666043921228,"results":"70","hashOfConfig":"45"},{"size":1000,"mtime":1666078448884,"results":"71","hashOfConfig":"45"},{"size":1296,"mtime":1666079983859,"results":"72","hashOfConfig":"45"},{"size":4609,"mtime":1667171388265,"results":"73","hashOfConfig":"45"},{"size":3114,"mtime":1667258809521,"results":"74","hashOfConfig":"45"},{"size":2717,"mtime":1667175157687,"results":"75","hashOfConfig":"45"},{"size":64,"mtime":1666307784734,"results":"76","hashOfConfig":"45"},{"size":1372,"mtime":1667867674548,"results":"77","hashOfConfig":"45"},{"size":386,"mtime":1667259022383,"results":"78","hashOfConfig":"45"},{"size":1841,"mtime":1667864502844,"results":"79","hashOfConfig":"45"},{"size":1851,"mtime":1667866372698,"results":"80","hashOfConfig":"45"},{"size":785,"mtime":1667864064624,"results":"81","hashOfConfig":"45"},{"size":541,"mtime":1667369640198,"results":"82","hashOfConfig":"45"},{"size":576,"mtime":1667866389814,"results":"83","hashOfConfig":"45"},{"size":3377,"mtime":1667874884895,"results":"84","hashOfConfig":"45"},{"size":2383,"mtime":1667873628121,"results":"85","hashOfConfig":"45"},{"size":590,"mtime":1667866744738,"results":"86","hashOfConfig":"45"},{"size":3068,"mtime":1668037239048,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"1fk7t8b",{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"91"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"91"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"91"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"91"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"91"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"91"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"91"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"91"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"91"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"91"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Project\\client\\src\\index.tsx",[],[],[],"D:\\Project\\client\\src\\reportWebVitals.ts",[],[],"D:\\Project\\client\\src\\App\\Layout\\App.tsx",["228","229"],[],"D:\\Project\\client\\src\\App\\Layout\\Header.tsx",["230","231","232"],[],"import { Margin, ShoppingCart } from \"@mui/icons-material\";\r\nimport { AppBar, Badge, Box, colors, IconButton, List, ListItem, makeStyles, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport { Container } from \"@mui/system\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../Store/ConfigureStore\";\r\nimport SignedInMenu from \"./SignedInMenu\";\r\n\r\n\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }\r\n]\r\nconst rightLinks = [\r\n    { title: 'register', path: '/register' },\r\n    { title: 'login', path: '/login' }\r\n]\r\n\r\nconst navStyle = {\r\n    color: 'White',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: '#FBDA43'\r\n    },\r\n    '&.active': {\r\n        color: '#FBDA43'\r\n    }\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const { user } = useAppSelector(state => state.account);\r\n\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Container maxWidth=\"xl\">\r\n                <Toolbar sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                }}>\r\n                    <Box\r\n                        component=\"img\"\r\n                        sx={{\r\n                            height: 70,\r\n                            marginRight: -23\r\n                        }}\r\n                        alt=\"cool-Collection logo\"\r\n                        src=\"../cool.png\"\r\n                    ></Box>\r\n                    <Box sx={{ ml: 2 }}>\r\n                        <Typography variant=\"h6\" component={NavLink}\r\n                            to='/home'\r\n                            end\r\n                            sx={navStyle}>\r\n                            COOL COLLECTIONS\r\n                        </Typography>\r\n                        <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                    </Box>\r\n\r\n                    <List sx={{ display: 'flex' }}>\r\n                        {midLinks.map(({ title, path }) => (\r\n                            <ListItem component={NavLink}\r\n                                to={path}\r\n                                key={path}\r\n                                sx={navStyle}>\r\n                                {title.toUpperCase()}\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Box display='flex' alignItems='center' >\r\n                        <IconButton component={Link} to={`/basket`} size=\"medium\" sx={navStyle}>\r\n                            <Badge badgeContent={itemCount} color='secondary'>\r\n                                <ShoppingCart></ShoppingCart>\r\n                            </Badge>\r\n                        </IconButton>\r\n                        {user ? (\r\n                            <SignedInMenu />\r\n                        ) : (\r\n                            <List sx={{ display: 'flex', color: '#2676CE' }}>\r\n                                {rightLinks.map(({ title, path }) => (\r\n                                    <ListItem component={NavLink}\r\n                                        to={path}\r\n                                        key={path}\r\n                                        sx={navStyle}>\r\n                                        {title.toUpperCase()}\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        )}\r\n                    </Box>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Catalog\\Catalog.tsx",[],[],"D:\\Project\\client\\src\\Features\\Contact\\Contact.tsx",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductDetails.tsx",["233"],[],"import { LoadingButton } from \"@mui/lab\";\r\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect} from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport NotFound from \"../../App/Errors/NotFound\";\r\nimport LoadingComponent from \"../../App/Layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport { addBasketItemAsync } from \"../Basket/BasketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./CatalogSlice\";\r\n\r\n\r\n\r\n\r\nexport default function ProductDetails() {\r\n\r\n    const {status} = useAppSelector(state => state.basket);\r\n    const {status:productStatus} = useAppSelector(state => state.catalog)\r\n    const dispatch = useAppDispatch();\r\n    const { id } = useParams<{id: string}>();\r\n    const product = useAppSelector(state => productSelectors.selectById(state, Number(id)));\r\n\r\n    useEffect(() => {\r\n      if(!product) dispatch(fetchProductAsync(Number(id)))\r\n    }, [id, dispatch, product])\r\n\r\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading Product'/>\r\n    if (!product) return <NotFound/>\r\n\r\n    return (\r\n        <Grid container spacing={6} sx={{mt:10}}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>{product.name}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant='h4'>${product.price.toFixed(2)}</Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Size</TableCell>\r\n                                <TableCell>{product.size}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Gender</TableCell>\r\n                                <TableCell>{product.gender}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in Stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2} marginTop={2}>\r\n                <Grid item xs={6}>\r\n                    <Link to='/catalog' style={{textDecoration:'none'}}>\r\n                    <LoadingButton sx={{height:'55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant=\"contained\"\r\n                            fullWidth>Go Back</LoadingButton>\r\n                    </Link>                     \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                            <LoadingButton sx={{height:'55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant=\"contained\"\r\n                            fullWidth \r\n                            loading={status.includes('pendingAddItem' + product.id)}\r\n                            onClick={() => dispatch(addBasketItemAsync({productId:product.id, quantity:1}))} >Add to Cart</LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\About\\About.tsx",[],[],"D:\\Project\\client\\src\\Features\\Home\\Home.tsx",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductList.tsx",["234","235","236","237","238"],[],"import { Avatar, Grid, List, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\r\nimport { Product } from \"../../App/Models/Product\";\r\nimport { useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport ProductsCard from \"./ProductCard\";\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const { productsLoaded } = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n            {products.map((product) => {\r\n                return (\r\n                    <Grid item xs={4} sm={4} md={4} sx={{mt:2}} key={product.id}>\r\n                        {!productsLoaded ? (<ProductCardSkeleton />) : (\r\n                            <ProductsCard product={product}></ProductsCard>\r\n                        )}\r\n\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </Grid>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Catalog\\ProductCard.tsx",["239"],[],"D:\\Project\\client\\src\\App\\Api\\Agent.ts",["240"],[],"import { PaginatedResponse } from './../Models/pagination';\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { request } from 'http';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Store } from '../Store/ConfigureStore';\r\n\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api/';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = Store.getState().account.user?.token;\r\n    if(token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    await sleep();\r\n    const pagination = response.headers['pagination'];\r\n    if(pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\r\n       return response; \r\n    }\r\n\r\n    return response\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error'\r\n            });\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response);\r\n});\r\n\r\nconst requests = {\r\n    get: (url: string, params?:URLSearchParams) => axios.get(url, {params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params:URLSearchParams) => requests.get('products', params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters:() => requests.get('products/filters')\r\n}\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get('error/bad-request'),\r\n    get401Error: () => requests.get('error/unauthorized'),\r\n    get404Error: () => requests.get('error/not-found'),\r\n    get500Error: () => requests.get('error/server-error'),\r\n    getValidationError: () => requests.get('error/validation-error'),\r\n}\r\n\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\r\n}\r\n\r\nconst Account = {\r\n    login:(values:any) => requests.post('account/login',values),\r\n    register:(values:any) => requests.post('account/register',values),\r\n    currentUser:() => requests.get('account/getCurrentUser')\r\n}\r\nconst Orders = {\r\n    list:() => requests.get('orders'),\r\n    fetch:(id:number) => requests.get(`orders/${id}`),\r\n    create:(values:any) => requests.post('orders', values)\r\n}\r\n\r\nconst Agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders\r\n}\r\n\r\nexport default Agent;","D:\\Project\\client\\src\\App\\Errors\\ServerError.tsx",["241","242"],[],"import { Button, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Container } from \"@mui/system\";\r\nimport { Link, Route, useNavigate } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nexport default function ServerError() {\r\n    const { state } = useLocation();\r\n\r\n    return (\r\n        <Container component={Paper} sx={{ marginTop: 2 }}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant=\"h3\" gutterBottom>This is a server error</Typography>\r\n                    <Divider></Divider>\r\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                </>\r\n            ) : (\r\n                <>\r\n                <Typography variant=\"h3\" color='error' gutterBottom>This is a Server Error</Typography>\r\n                <Divider></Divider>\r\n                </>\r\n            )}\r\n            <Button sx={{fontWeight:'800'}} fullWidth component={Link} to='/catalog'>Go back to Shop</Button>\r\n        </Container>\r\n    )\r\n}","D:\\Project\\client\\src\\App\\Errors\\NotFound.tsx",["243"],[],"import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\nreturn(\r\n    <Container component={Paper} sx={{marginTop:2, display:'flex-box',textAlign:'center'}}>\r\n        <Typography gutterBottom variant=\"h3\" color=\"#E8AC67\" marginTop='30px' paddingTop=\"30px\">\r\n            Oops We could not found what you are looking for!</Typography>\r\n        <img src=\"../notfound.png\"></img>\r\n        <Divider></Divider>\r\n        <Button sx={{fontWeight:'800'}} fullWidth component={Link} to='/catalog'>Go back to Shop</Button>\r\n    </Container>\r\n)\r\n}","D:\\Project\\client\\src\\App\\Layout\\LoadingComponent.tsx",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketPage.tsx",[],[],"D:\\Project\\client\\src\\App\\Util\\Util.ts",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketSummary.tsx",["244","245","246"],[],"import { TableContainer, Paper, Table, TableBody, TableRow, TableCell, Typography, ListItem } from \"@mui/material\";\r\nimport { Basket } from \"../../App/Models/Basket\";\r\nimport { useAppSelector } from \"../../App/Store/ConfigureStore\";\r\n\r\n\r\nexport default function BasketSummary() {\r\n\r\n    const {basket} = useAppSelector(state => state.basket)\r\n    const subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity*item.price), 0) ?? 0;;\r\n    const deliveryFee = subtotal > 100 ? 0 : 15;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">${subtotal.toFixed(2)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">${deliveryFee.toFixed(2)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">${(subtotal + deliveryFee).toFixed(2)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutPage.tsx",["247","248"],[],"D:\\Project\\client\\src\\App\\Store\\ConfigureStore.ts",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketSlice.ts",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\CatalogSlice.ts",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductSearch.tsx",[],[],"D:\\Project\\client\\src\\App\\Components\\RadioButtonGroup.tsx",[],[],"D:\\Project\\client\\src\\App\\Components\\CheckBoxButtons.tsx",[],[],"D:\\Project\\client\\src\\App\\Models\\pagination.ts",[],[],"D:\\Project\\client\\src\\App\\Components\\AppPagination.tsx",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductCardSkeleton.tsx",[],[],"D:\\Project\\client\\src\\Features\\Account\\Register.tsx",["249","250"],[],"import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Alert, AlertTitle, List, ListItem, ListItemText, Paper } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport Agent from '../../App/Api/Agent';\r\nimport { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\n\r\n\r\n\r\n\r\nexport default function Register() {\r\n\r\n    const { register, handleSubmit, formState: { isSubmitting, errors } } = useForm()\r\n    const [validationError, setValidationError] = useState([]);\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\"\r\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4, mt: 2 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Register\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit((data) =>\r\n                Agent.Account.register(data)\r\n                .then(() => {\r\n                    toast.success('Registration Successful. Please Login');\r\n                    history.push('/login')\r\n                })\r\n                .catch(error => setValidationError(error)))} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    autoComplete=\"name\"\r\n                    autoFocus\r\n                    {...register('username', { required: 'Username is required' })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message?.toString()}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Email Address\"\r\n                    autoComplete=\"email\"\r\n                    {...register('email', \r\n                    { required: 'Email is required',\r\n                      pattern:{\r\n                        value:/^\\w+[\\w-\\.]*\\@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                        message:\"Not a valid email address\"\r\n                    }})}\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message?.toString()}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    {...register('password', { required: 'Password is required' })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message?.toString()}\r\n                />\r\n                {validationError.length > 0 &&\r\n                    <Alert severity=\"error\">\r\n                        <AlertTitle>Validation Error</AlertTitle>\r\n                        <List>\r\n                            {validationError.map(error => (\r\n                                <ListItem key={error}>\r\n                                    <ListItemText>\r\n                                        {error}\r\n                                    </ListItemText>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </Alert>\r\n                }\r\n                <LoadingButton\r\n                    loading={isSubmitting}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Register\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item xs>\r\n                        <Link to=\"/register\">\r\n                            Forgot password?\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link to=\"/login\">\r\n                            {\"Already have an account? Sign In\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","D:\\Project\\client\\src\\Features\\Account\\Login.tsx",["251"],[],"import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { signInUser } from './AccountSlice';\r\nimport { useAppDispatch } from '../../App/Store/ConfigureStore';\r\nimport { history } from '../..';\r\nimport { useMemo } from 'react';\r\n\r\n\r\n\r\n\r\nexport default function Login() {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const { register, handleSubmit, formState: { isSubmitting, errors } } = useForm();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const from = useMemo(() => {\r\n    const state = location.state as { from: Location };\r\n    if (state && state.from && state.from.pathname) {\r\n      return state.from?.pathname;\r\n    }\r\n    return null;\r\n  }, [location]);\r\n\r\n  async function submitForm(data: FieldValues) {\r\n    try {\r\n      await dispatch(signInUser(data));\r\n      navigate(from || '/catalog');\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component={Paper} maxWidth=\"sm\"\r\n      sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4, mt: 2 }}>\r\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Sign in\r\n      </Typography>\r\n      <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Username\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          {...register('username', { required: 'Username is required' })}\r\n          error={!!errors.username}\r\n          helperText={errors?.username?.message?.toString()}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          {...register('password', { required: 'Password is required' })}\r\n          error={!!errors.password}\r\n          helperText={errors?.password?.message?.toString()}\r\n        />\r\n        <LoadingButton\r\n\r\n          loading={isSubmitting}\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n        >\r\n          Sign In\r\n        </LoadingButton>\r\n        <Grid container>\r\n          <Grid item xs>\r\n            <Link to=\"/register\">\r\n              Forgot password?\r\n            </Link>\r\n          </Grid>\r\n          <Grid item>\r\n            <Link to=\"/register\">\r\n              {\"Don't have an account? Sign Up\"}\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\Project\\client\\src\\Features\\Account\\AccountSlice.ts",[],[],"D:\\Project\\client\\src\\App\\Models\\User.ts",[],[],"D:\\Project\\client\\src\\App\\Layout\\SignedInMenu.tsx",[],[],"D:\\Project\\client\\src\\App\\Layout\\PrivateRoute.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\PaymentForm.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\AddressForm.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\Review.tsx",["252","253"],[],"import { Grid, Button } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppSelector } from '../../App/Store/ConfigureStore';\r\nimport BasketSummary from '../Basket/BasketSummary';\r\nimport BasketTable from '../Basket/BasketTable';\r\n\r\n\r\nexport default function Review() {\r\n  \r\n  const { basket } = useAppSelector(state => state.basket);\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket &&\r\n      <BasketTable items={basket.items} isBasket={false}/>}\r\n      <Grid container>\r\n        <Grid item xs={6}/>\r\n        <Grid item xs={6}>        \r\n          <BasketSummary></BasketSummary>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","D:\\Project\\client\\src\\App\\Components\\AppTextInput.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\CheckoutValidation.ts",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketTable.tsx",[],[],"D:\\Project\\client\\src\\Features\\Orders\\Orders.tsx",["254","255","256"],[],"D:\\Project\\client\\src\\App\\Models\\Order.ts",[],[],"D:\\Project\\client\\src\\Features\\Orders\\OrderDetail.tsx",["257","258","259","260","261"],[],{"ruleId":"262","severity":1,"message":"263","line":2,"column":47,"nodeType":"264","messageId":"265","endLine":2,"endColumn":53},{"ruleId":"262","severity":1,"message":"266","line":2,"column":70,"nodeType":"264","messageId":"265","endLine":2,"endColumn":80},{"ruleId":"262","severity":1,"message":"267","line":1,"column":10,"nodeType":"264","messageId":"265","endLine":1,"endColumn":16},{"ruleId":"262","severity":1,"message":"268","line":2,"column":30,"nodeType":"264","messageId":"265","endLine":2,"endColumn":36},{"ruleId":"262","severity":1,"message":"269","line":2,"column":66,"nodeType":"264","messageId":"265","endLine":2,"endColumn":76},{"ruleId":"262","severity":1,"message":"270","line":2,"column":80,"nodeType":"264","messageId":"265","endLine":2,"endColumn":89},{"ruleId":"262","severity":1,"message":"271","line":1,"column":10,"nodeType":"264","messageId":"265","endLine":1,"endColumn":16},{"ruleId":"262","severity":1,"message":"272","line":1,"column":24,"nodeType":"264","messageId":"265","endLine":1,"endColumn":28},{"ruleId":"262","severity":1,"message":"273","line":1,"column":30,"nodeType":"264","messageId":"265","endLine":1,"endColumn":38},{"ruleId":"262","severity":1,"message":"274","line":1,"column":40,"nodeType":"264","messageId":"265","endLine":1,"endColumn":54},{"ruleId":"262","severity":1,"message":"275","line":1,"column":56,"nodeType":"264","messageId":"265","endLine":1,"endColumn":68},{"ruleId":"262","severity":1,"message":"276","line":6,"column":30,"nodeType":"264","messageId":"265","endLine":6,"endColumn":39},{"ruleId":"262","severity":1,"message":"277","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":17},{"ruleId":"262","severity":1,"message":"278","line":3,"column":16,"nodeType":"264","messageId":"265","endLine":3,"endColumn":21},{"ruleId":"262","severity":1,"message":"279","line":3,"column":23,"nodeType":"264","messageId":"265","endLine":3,"endColumn":34},{"ruleId":"280","severity":1,"message":"281","line":9,"column":9,"nodeType":"282","endLine":9,"endColumn":36},{"ruleId":"262","severity":1,"message":"266","line":1,"column":72,"nodeType":"264","messageId":"265","endLine":1,"endColumn":82},{"ruleId":"262","severity":1,"message":"273","line":1,"column":84,"nodeType":"264","messageId":"265","endLine":1,"endColumn":92},{"ruleId":"262","severity":1,"message":"283","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":16},{"ruleId":"262","severity":1,"message":"284","line":32,"column":12,"nodeType":"264","messageId":"265","endLine":32,"endColumn":18},{"ruleId":"262","severity":1,"message":"285","line":33,"column":11,"nodeType":"264","messageId":"265","endLine":33,"endColumn":18},{"ruleId":"286","severity":1,"message":"287","line":58,"column":40,"nodeType":"288","messageId":"289","endLine":58,"endColumn":41,"suggestions":"290"},{"ruleId":"286","severity":1,"message":"291","line":58,"column":44,"nodeType":"288","messageId":"289","endLine":58,"endColumn":45,"suggestions":"292"},{"ruleId":"262","severity":1,"message":"293","line":14,"column":10,"nodeType":"264","messageId":"265","endLine":14,"endColumn":17},{"ruleId":"262","severity":1,"message":"294","line":1,"column":16,"nodeType":"264","messageId":"265","endLine":1,"endColumn":22},{"ruleId":"262","severity":1,"message":"295","line":3,"column":10,"nodeType":"264","messageId":"265","endLine":3,"endColumn":14},{"ruleId":"262","severity":1,"message":"296","line":2,"column":10,"nodeType":"264","messageId":"265","endLine":2,"endColumn":19},{"ruleId":"262","severity":1,"message":"297","line":4,"column":10,"nodeType":"264","messageId":"265","endLine":4,"endColumn":17},{"ruleId":"262","severity":1,"message":"298","line":24,"column":9,"nodeType":"264","messageId":"265","endLine":24,"endColumn":22},{"ruleId":"262","severity":1,"message":"271","line":1,"column":108,"nodeType":"264","messageId":"265","endLine":1,"endColumn":114},{"ruleId":"262","severity":1,"message":"299","line":1,"column":116,"nodeType":"264","messageId":"265","endLine":1,"endColumn":120},{"ruleId":"262","severity":1,"message":"300","line":5,"column":8,"nodeType":"264","messageId":"265","endLine":5,"endColumn":24},{"ruleId":"262","severity":1,"message":"285","line":13,"column":12,"nodeType":"264","messageId":"265","endLine":13,"endColumn":19},{"ruleId":"280","severity":1,"message":"281","line":53,"column":37,"nodeType":"282","endLine":53,"endColumn":105},"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Margin' is defined but never used.","'colors' is defined but never used.","'makeStyles' is defined but never used.","'TextField' is defined but never used.","'Avatar' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemText' is defined but never used.","'setBasket' is defined but never used.","'request' is defined but never used.","'Route' is defined but never used.","'useNavigate' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Basket' is defined but never used.","'basket' is assigned a value but never used.","'loading' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["301","302"],"Unnecessary escape character: \\@.",["303","304"],"'history' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'Component' is defined but never used.","'NavLink' is defined but never used.","'toOrderDetail' is assigned a value but never used.","'Grid' is defined but never used.","'LoadingComponent' is defined but never used.",{"messageId":"305","fix":"306","desc":"307"},{"messageId":"308","fix":"309","desc":"310"},{"messageId":"305","fix":"311","desc":"307"},{"messageId":"308","fix":"312","desc":"310"},"removeEscape",{"range":"313","text":"314"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"315","text":"316"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"317","text":"314"},{"range":"318","text":"316"},[2462,2463],"",[2462,2462],"\\",[2466,2467],[2466,2466]]