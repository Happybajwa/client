[{"D:\\Project\\client\\src\\index.tsx":"1","D:\\Project\\client\\src\\reportWebVitals.ts":"2","D:\\Project\\client\\src\\App\\Layout\\App.tsx":"3","D:\\Project\\client\\src\\App\\Layout\\Header.tsx":"4","D:\\Project\\client\\src\\Features\\Catalog\\Catalog.tsx":"5","D:\\Project\\client\\src\\Features\\Catalog\\ProductDetails.tsx":"6","D:\\Project\\client\\src\\Features\\About\\About.tsx":"7","D:\\Project\\client\\src\\Features\\Home\\Home.tsx":"8","D:\\Project\\client\\src\\Features\\Catalog\\ProductList.tsx":"9","D:\\Project\\client\\src\\Features\\Catalog\\ProductCard.tsx":"10","D:\\Project\\client\\src\\App\\Api\\Agent.ts":"11","D:\\Project\\client\\src\\App\\Errors\\ServerError.tsx":"12","D:\\Project\\client\\src\\App\\Errors\\NotFound.tsx":"13","D:\\Project\\client\\src\\App\\Layout\\LoadingComponent.tsx":"14","D:\\Project\\client\\src\\Features\\Basket\\BasketPage.tsx":"15","D:\\Project\\client\\src\\App\\Util\\Util.ts":"16","D:\\Project\\client\\src\\Features\\Basket\\BasketSummary.tsx":"17","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutPage.tsx":"18","D:\\Project\\client\\src\\App\\Store\\ConfigureStore.ts":"19","D:\\Project\\client\\src\\Features\\Basket\\BasketSlice.ts":"20","D:\\Project\\client\\src\\Features\\Catalog\\CatalogSlice.ts":"21","D:\\Project\\client\\src\\Features\\Catalog\\ProductSearch.tsx":"22","D:\\Project\\client\\src\\App\\Components\\RadioButtonGroup.tsx":"23","D:\\Project\\client\\src\\App\\Components\\CheckBoxButtons.tsx":"24","D:\\Project\\client\\src\\App\\Models\\pagination.ts":"25","D:\\Project\\client\\src\\App\\Components\\AppPagination.tsx":"26","D:\\Project\\client\\src\\Features\\Catalog\\ProductCardSkeleton.tsx":"27","D:\\Project\\client\\src\\Features\\Account\\Register.tsx":"28","D:\\Project\\client\\src\\Features\\Account\\Login.tsx":"29","D:\\Project\\client\\src\\Features\\Account\\AccountSlice.ts":"30","D:\\Project\\client\\src\\App\\Models\\User.ts":"31","D:\\Project\\client\\src\\App\\Layout\\SignedInMenu.tsx":"32","D:\\Project\\client\\src\\App\\Layout\\PrivateRoute.tsx":"33","D:\\Project\\client\\src\\Features\\Checkout\\PaymentForm.tsx":"34","D:\\Project\\client\\src\\Features\\Checkout\\AddressForm.tsx":"35","D:\\Project\\client\\src\\Features\\Checkout\\Review.tsx":"36","D:\\Project\\client\\src\\App\\Components\\AppTextInput.tsx":"37","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutValidation.ts":"38","D:\\Project\\client\\src\\Features\\Basket\\BasketTable.tsx":"39","D:\\Project\\client\\src\\Features\\Orders\\Orders.tsx":"40","D:\\Project\\client\\src\\App\\Models\\Order.ts":"41","D:\\Project\\client\\src\\Features\\Orders\\OrderDetail.tsx":"42","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutWrapper.tsx":"43","D:\\Project\\client\\src\\Features\\Checkout\\StripeInput.tsx":"44","D:\\Project\\client\\src\\App\\hooks\\useProducts.tsx":"45","D:\\Project\\client\\src\\Features\\Admin\\Inventory.tsx":"46","D:\\Project\\client\\src\\Features\\Admin\\productForm.tsx":"47","D:\\Project\\client\\src\\App\\Components\\AppSelectList.tsx":"48","D:\\Project\\client\\src\\App\\Components\\AppDropzone.tsx":"49","D:\\Project\\client\\src\\Features\\Admin\\productValidation.ts":"50","D:\\Project\\client\\src\\Features\\profile\\myProfile.tsx":"51"},{"size":1042,"mtime":1668857029503,"results":"52","hashOfConfig":"53"},{"size":440,"mtime":1663326605000,"results":"54","hashOfConfig":"53"},{"size":3964,"mtime":1668860141562,"results":"55","hashOfConfig":"53"},{"size":4292,"mtime":1668860173584,"results":"56","hashOfConfig":"53"},{"size":2550,"mtime":1668745170314,"results":"57","hashOfConfig":"53"},{"size":4080,"mtime":1665961883777,"results":"58","hashOfConfig":"53"},{"size":1041,"mtime":1668857656580,"results":"59","hashOfConfig":"53"},{"size":1861,"mtime":1668851563888,"results":"60","hashOfConfig":"53"},{"size":1022,"mtime":1666345805999,"results":"61","hashOfConfig":"53"},{"size":2220,"mtime":1667871901225,"results":"62","hashOfConfig":"53"},{"size":4390,"mtime":1668770836633,"results":"63","hashOfConfig":"53"},{"size":1043,"mtime":1666306163926,"results":"64","hashOfConfig":"53"},{"size":640,"mtime":1664443127144,"results":"65","hashOfConfig":"53"},{"size":650,"mtime":1664444837349,"results":"66","hashOfConfig":"53"},{"size":938,"mtime":1667863886113,"results":"67","hashOfConfig":"53"},{"size":149,"mtime":1664514761947,"results":"68","hashOfConfig":"53"},{"size":1690,"mtime":1668157557016,"results":"69","hashOfConfig":"53"},{"size":6582,"mtime":1668681520272,"results":"70","hashOfConfig":"53"},{"size":780,"mtime":1666308008319,"results":"71","hashOfConfig":"53"},{"size":2742,"mtime":1667173491526,"results":"72","hashOfConfig":"53"},{"size":5603,"mtime":1668767869780,"results":"73","hashOfConfig":"53"},{"size":1019,"mtime":1665961420083,"results":"74","hashOfConfig":"53"},{"size":626,"mtime":1665962906927,"results":"75","hashOfConfig":"53"},{"size":1054,"mtime":1665965934413,"results":"76","hashOfConfig":"53"},{"size":323,"mtime":1666043921228,"results":"77","hashOfConfig":"53"},{"size":1000,"mtime":1666078448884,"results":"78","hashOfConfig":"53"},{"size":1296,"mtime":1666079983859,"results":"79","hashOfConfig":"53"},{"size":4609,"mtime":1667171388265,"results":"80","hashOfConfig":"53"},{"size":3114,"mtime":1667258809521,"results":"81","hashOfConfig":"53"},{"size":3312,"mtime":1668847705263,"results":"82","hashOfConfig":"53"},{"size":64,"mtime":1666307784734,"results":"83","hashOfConfig":"53"},{"size":1385,"mtime":1668858885715,"results":"84","hashOfConfig":"53"},{"size":839,"mtime":1668858222215,"results":"85","hashOfConfig":"53"},{"size":2228,"mtime":1668678277269,"results":"86","hashOfConfig":"53"},{"size":1851,"mtime":1667866372698,"results":"87","hashOfConfig":"53"},{"size":785,"mtime":1667864064624,"results":"88","hashOfConfig":"53"},{"size":750,"mtime":1668761634926,"results":"89","hashOfConfig":"53"},{"size":576,"mtime":1667866389814,"results":"90","hashOfConfig":"53"},{"size":3377,"mtime":1667874884895,"results":"91","hashOfConfig":"53"},{"size":2383,"mtime":1667873628121,"results":"92","hashOfConfig":"53"},{"size":590,"mtime":1667866744738,"results":"93","hashOfConfig":"53"},{"size":3068,"mtime":1668037239048,"results":"94","hashOfConfig":"53"},{"size":1131,"mtime":1668679970332,"results":"95","hashOfConfig":"53"},{"size":615,"mtime":1668678390467,"results":"96","hashOfConfig":"53"},{"size":842,"mtime":1668745228532,"results":"97","hashOfConfig":"53"},{"size":5164,"mtime":1668767546117,"results":"98","hashOfConfig":"53"},{"size":4324,"mtime":1668767661741,"results":"99","hashOfConfig":"53"},{"size":953,"mtime":1668747232244,"results":"100","hashOfConfig":"53"},{"size":1613,"mtime":1668760143653,"results":"101","hashOfConfig":"53"},{"size":446,"mtime":1668766314160,"results":"102","hashOfConfig":"53"},{"size":1255,"mtime":1668859801336,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fk7t8b",{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"110"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"165","usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"110"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"110"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"110"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"110"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"110"},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"110"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Project\\client\\src\\index.tsx",[],[],"D:\\Project\\client\\src\\reportWebVitals.ts",[],[],[],"D:\\Project\\client\\src\\App\\Layout\\App.tsx",[],[],"D:\\Project\\client\\src\\App\\Layout\\Header.tsx",["274","275","276"],[],"D:\\Project\\client\\src\\Features\\Catalog\\Catalog.tsx",["277"],[],"import { Grid, Paper } from \"@mui/material\";\r\nimport AppPagination from \"../../App/Components/AppPagination\";\r\nimport CheckBoxButton from \"../../App/Components/CheckBoxButtons\";\r\nimport RadioButtonGroup from \"../../App/Components/RadioButtonGroup\";\r\nimport useProducts from \"../../App/hooks/useProducts\";\r\nimport LoadingComponent from \"../../App/Layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport {  setPageNumber, setProductParams } from \"./CatalogSlice\";\r\nimport ProductList from \"./ProductList\";\r\nimport ProductSearch from \"./ProductSearch\";\r\n\r\nconst sortOptions = [\r\n  { value: 'name', label: 'Alphabetical' },\r\n  { value: 'priceDesc', label: 'Price - High to Low' },\r\n  { value: 'Price', label: 'Price - Low to High' }\r\n]\r\n\r\nexport default function Catalog() {\r\n  const {products, gender, size, filtersLoaded, pageData, productsLoaded} =  useProducts();\r\n  const {  ProductParams } = useAppSelector(state => state.catalog);\r\n  const dispatch = useAppDispatch();\r\n\r\n  if (!filtersLoaded) return <LoadingComponent message=\"Loading Products\" />\r\n  return (\r\n    <Grid container sx={{mt:-2}} display='flex' marginTop={10} justifyContent='space-between' spacing={{ xs: 2, md: 3 }}>\r\n      <Grid item xs={3}>\r\n        <Paper sx={{ mb: 2, mt:2}}>\r\n          <ProductSearch></ProductSearch>\r\n        </Paper>\r\n        <Paper sx={{ mb: 2, p: 2}}>\r\n          <RadioButtonGroup\r\n            selectedValue={ProductParams.orderBy}\r\n            options={sortOptions}\r\n            onChange={(e) => dispatch(setProductParams({ orderBy: e.target.value }))}\r\n          />\r\n        </Paper>\r\n        <Paper sx={{ mb: 2, p: 2 }}>\r\n          <CheckBoxButton\r\n            items={gender}\r\n            checked={ProductParams.gender}\r\n            onChange={(items: string[]) => dispatch(setProductParams({ gender: items }))}\r\n          />\r\n        </Paper>\r\n        <Paper sx={{ mb: 2, p: 2 }}>\r\n          <CheckBoxButton\r\n            items={size}\r\n            checked={ProductParams.size}\r\n            onChange={(items: string[]) => dispatch(setProductParams({ size: items }))}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n      <Grid item xs={9}>\r\n        <ProductList products={products} />\r\n      </Grid>\r\n      <Grid item xs={3} />\r\n      <Grid item xs={9} sx={{ mb: 1 }}>\r\n        {pageData &&\r\n          <AppPagination\r\n            pageData={pageData}\r\n            onPageChange={(page: number) => dispatch(setPageNumber({ pageNumber: page }))}\r\n          />}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}","D:\\Project\\client\\src\\Features\\Catalog\\ProductDetails.tsx",["278"],[],"import { LoadingButton } from \"@mui/lab\";\r\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect} from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport NotFound from \"../../App/Errors/NotFound\";\r\nimport LoadingComponent from \"../../App/Layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport { addBasketItemAsync } from \"../Basket/BasketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./CatalogSlice\";\r\n\r\n\r\n\r\n\r\nexport default function ProductDetails() {\r\n\r\n    const {status} = useAppSelector(state => state.basket);\r\n    const {status:productStatus} = useAppSelector(state => state.catalog)\r\n    const dispatch = useAppDispatch();\r\n    const { id } = useParams<{id: string}>();\r\n    const product = useAppSelector(state => productSelectors.selectById(state, Number(id)));\r\n\r\n    useEffect(() => {\r\n      if(!product) dispatch(fetchProductAsync(Number(id)))\r\n    }, [id, dispatch, product])\r\n\r\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading Product'/>\r\n    if (!product) return <NotFound/>\r\n\r\n    return (\r\n        <Grid container spacing={6} sx={{mt:10}}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>{product.name}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant='h4'>${product.price.toFixed(2)}</Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Size</TableCell>\r\n                                <TableCell>{product.size}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Gender</TableCell>\r\n                                <TableCell>{product.gender}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in Stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2} marginTop={2}>\r\n                <Grid item xs={6}>\r\n                    <Link to='/catalog' style={{textDecoration:'none'}}>\r\n                    <LoadingButton sx={{height:'55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant=\"contained\"\r\n                            fullWidth>Go Back</LoadingButton>\r\n                    </Link>                     \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                            <LoadingButton sx={{height:'55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant=\"contained\"\r\n                            fullWidth \r\n                            loading={status.includes('pendingAddItem' + product.id)}\r\n                            onClick={() => dispatch(addBasketItemAsync({productId:product.id, quantity:1}))} >Add to Cart</LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\About\\About.tsx",["279"],[],"D:\\Project\\client\\src\\Features\\Home\\Home.tsx",["280","281","282"],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductList.tsx",["283","284","285","286","287"],[],"import { Avatar, Grid, List, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\r\nimport { Product } from \"../../App/Models/Product\";\r\nimport { useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport ProductsCard from \"./ProductCard\";\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const { productsLoaded } = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n            {products.map((product) => {\r\n                return (\r\n                    <Grid item xs={4} sm={4} md={4} sx={{mt:2}} key={product.id}>\r\n                        {!productsLoaded ? (<ProductCardSkeleton />) : (\r\n                            <ProductsCard product={product}></ProductsCard>\r\n                        )}\r\n\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </Grid>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Catalog\\ProductCard.tsx",["288"],[],"import { Avatar, Button, Card, CardActions, CardContent, CardMedia, Typography, CardHeader } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../App/Models/Product\";\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { useAppDispatch, useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport { addBasketItemAsync, setBasket } from \"../Basket/BasketSlice\";\r\n\r\ninterface Props {\r\n    product: Product;\r\n}\r\n\r\nexport default function ProductsCard({ product }: Props) {\r\n    const { status } = useAppSelector(state => state.basket)\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader color='#00b1d2'\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: \"secondary.main\" }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name.toUpperCase()}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: 'bold', color: 'primary.main' }\r\n                }\r\n                }\r\n            />\r\n            <CardMedia\r\n                component=\"img\"\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n                alt=\"Photo\"\r\n                sx={{p:2}}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" color='primary.main'>\r\n                    ${(product.price).toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.size} / {product.gender}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <CardActions>\r\n                    <LoadingButton loading={status.includes('pendingAddItem' + product.id)}\r\n                        onClick={() => dispatch(addBasketItemAsync({ productId: product.id , quantity:1}))}\r\n                        size=\"small\">Add to cart</LoadingButton>\r\n                    <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n                </CardActions>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","D:\\Project\\client\\src\\App\\Api\\Agent.ts",[],[],"D:\\Project\\client\\src\\App\\Errors\\ServerError.tsx",["289","290"],[],"import { Button, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Container } from \"@mui/system\";\r\nimport { Link, Route, useNavigate } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nexport default function ServerError() {\r\n    const { state } = useLocation();\r\n\r\n    return (\r\n        <Container component={Paper} sx={{ marginTop: 2 }}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant=\"h3\" gutterBottom>This is a server error</Typography>\r\n                    <Divider></Divider>\r\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                </>\r\n            ) : (\r\n                <>\r\n                <Typography variant=\"h3\" color='error' gutterBottom>This is a Server Error</Typography>\r\n                <Divider></Divider>\r\n                </>\r\n            )}\r\n            <Button sx={{fontWeight:'800'}} fullWidth component={Link} to='/catalog'>Go back to Shop</Button>\r\n        </Container>\r\n    )\r\n}","D:\\Project\\client\\src\\App\\Errors\\NotFound.tsx",["291"],[],"import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\nreturn(\r\n    <Container component={Paper} sx={{marginTop:2, display:'flex-box',textAlign:'center'}}>\r\n        <Typography gutterBottom variant=\"h3\" color=\"#E8AC67\" marginTop='30px' paddingTop=\"30px\">\r\n            Oops We could not found what you are looking for!</Typography>\r\n        <img src=\"../notfound.png\"></img>\r\n        <Divider></Divider>\r\n        <Button sx={{fontWeight:'800'}} fullWidth component={Link} to='/catalog'>Go back to Shop</Button>\r\n    </Container>\r\n)\r\n}","D:\\Project\\client\\src\\App\\Layout\\LoadingComponent.tsx",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketPage.tsx",[],[],"D:\\Project\\client\\src\\App\\Util\\Util.ts",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketSummary.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\CheckoutPage.tsx",["292","293","294"],[],"import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport Review from \"./Review\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationFunction } from \"./CheckoutValidation\";\r\nimport Agent from \"../../App/Api/Agent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { clearBasket } from \"../Basket/BasketSlice\";\r\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport { Link } from \"react-router-dom\";\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nfunction getStepContent(step: number) {\r\n    switch (step) {\r\n        case 0:\r\n            return <AddressForm />;\r\n        case 1:\r\n            return <Review />;\r\n        case 2:\r\n            return <PaymentForm />;\r\n        default:\r\n            throw new Error('Unknown step');\r\n    }\r\n}\r\n\r\n\r\nexport default function CheckoutPage() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const currentPageValidation = validationFunction[activeStep];\r\n    const methods = useForm({\r\n        mode: 'all',\r\n        resolver: yupResolver(currentPageValidation)\r\n    });\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return;//stripe is not ready\r\n\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard\r\n                    }\r\n                }\r\n            });\r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await Agent.Orders.create({ saveAddress, shippingAddress })\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you -  We have received your payment');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        }\r\n        else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #{orderNumber}. We have not emailed your order\r\n                                    confirmation, and will not send you an update when your order has\r\n                                    shipped as this is a Student Project!\r\n                                    <br></br>\r\n                                    To Check Stripe Payments. Click Below\r\n                                    <br></br>\r\n                                    <a href={'https://dashboard.stripe.com/test/payments'} target={'_blank'}>Click here</a>\r\n                                </Typography>\r\n                                \r\n                            ):(\r\n                                <Button variant=\"contained\" onClick={handleBack}>\r\n                                    Go Back and Try Again\r\n                                </Button>\r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\"\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\n","D:\\Project\\client\\src\\App\\Store\\ConfigureStore.ts",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketSlice.ts",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\CatalogSlice.ts",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductSearch.tsx",[],[],"D:\\Project\\client\\src\\App\\Components\\RadioButtonGroup.tsx",[],[],"D:\\Project\\client\\src\\App\\Components\\CheckBoxButtons.tsx",[],[],"D:\\Project\\client\\src\\App\\Models\\pagination.ts",[],[],"D:\\Project\\client\\src\\App\\Components\\AppPagination.tsx",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductCardSkeleton.tsx",[],[],"D:\\Project\\client\\src\\Features\\Account\\Register.tsx",["295","296"],[],"import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Alert, AlertTitle, List, ListItem, ListItemText, Paper } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport Agent from '../../App/Api/Agent';\r\nimport { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\n\r\n\r\n\r\n\r\nexport default function Register() {\r\n\r\n    const { register, handleSubmit, formState: { isSubmitting, errors } } = useForm()\r\n    const [validationError, setValidationError] = useState([]);\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\"\r\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4, mt: 2 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Register\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit((data) =>\r\n                Agent.Account.register(data)\r\n                .then(() => {\r\n                    toast.success('Registration Successful. Please Login');\r\n                    history.push('/login')\r\n                })\r\n                .catch(error => setValidationError(error)))} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    autoComplete=\"name\"\r\n                    autoFocus\r\n                    {...register('username', { required: 'Username is required' })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message?.toString()}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Email Address\"\r\n                    autoComplete=\"email\"\r\n                    {...register('email', \r\n                    { required: 'Email is required',\r\n                      pattern:{\r\n                        value:/^\\w+[\\w-\\.]*\\@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                        message:\"Not a valid email address\"\r\n                    }})}\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message?.toString()}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    {...register('password', { required: 'Password is required' })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message?.toString()}\r\n                />\r\n                {validationError.length > 0 &&\r\n                    <Alert severity=\"error\">\r\n                        <AlertTitle>Validation Error</AlertTitle>\r\n                        <List>\r\n                            {validationError.map(error => (\r\n                                <ListItem key={error}>\r\n                                    <ListItemText>\r\n                                        {error}\r\n                                    </ListItemText>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </Alert>\r\n                }\r\n                <LoadingButton\r\n                    loading={isSubmitting}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Register\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item xs>\r\n                        <Link to=\"/register\">\r\n                            Forgot password?\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link to=\"/login\">\r\n                            {\"Already have an account? Sign In\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","D:\\Project\\client\\src\\Features\\Account\\Login.tsx",["297"],[],"import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { signInUser } from './AccountSlice';\r\nimport { useAppDispatch } from '../../App/Store/ConfigureStore';\r\nimport { history } from '../..';\r\nimport { useMemo } from 'react';\r\n\r\n\r\n\r\n\r\nexport default function Login() {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const { register, handleSubmit, formState: { isSubmitting, errors } } = useForm();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const from = useMemo(() => {\r\n    const state = location.state as { from: Location };\r\n    if (state && state.from && state.from.pathname) {\r\n      return state.from?.pathname;\r\n    }\r\n    return null;\r\n  }, [location]);\r\n\r\n  async function submitForm(data: FieldValues) {\r\n    try {\r\n      await dispatch(signInUser(data));\r\n      navigate(from || '/catalog');\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component={Paper} maxWidth=\"sm\"\r\n      sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4, mt: 2 }}>\r\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Sign in\r\n      </Typography>\r\n      <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Username\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          {...register('username', { required: 'Username is required' })}\r\n          error={!!errors.username}\r\n          helperText={errors?.username?.message?.toString()}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          {...register('password', { required: 'Password is required' })}\r\n          error={!!errors.password}\r\n          helperText={errors?.password?.message?.toString()}\r\n        />\r\n        <LoadingButton\r\n\r\n          loading={isSubmitting}\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n        >\r\n          Sign In\r\n        </LoadingButton>\r\n        <Grid container>\r\n          <Grid item xs>\r\n            <Link to=\"/register\">\r\n              Forgot password?\r\n            </Link>\r\n          </Grid>\r\n          <Grid item>\r\n            <Link to=\"/register\">\r\n              {\"Don't have an account? Sign Up\"}\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\Project\\client\\src\\Features\\Account\\AccountSlice.ts",[],[],"D:\\Project\\client\\src\\App\\Models\\User.ts",[],[],"D:\\Project\\client\\src\\App\\Layout\\SignedInMenu.tsx",[],[],"D:\\Project\\client\\src\\App\\Layout\\PrivateRoute.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\PaymentForm.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\AddressForm.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\Review.tsx",["298","299"],[],"import { Grid, Button } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppSelector } from '../../App/Store/ConfigureStore';\r\nimport BasketSummary from '../Basket/BasketSummary';\r\nimport BasketTable from '../Basket/BasketTable';\r\n\r\n\r\nexport default function Review() {\r\n  \r\n  const { basket } = useAppSelector(state => state.basket);\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket &&\r\n      <BasketTable items={basket.items} isBasket={false}/>}\r\n      <Grid container>\r\n        <Grid item xs={6}/>\r\n        <Grid item xs={6}>        \r\n          <BasketSummary></BasketSummary>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","D:\\Project\\client\\src\\App\\Components\\AppTextInput.tsx",["300"],[],"import { PropaneRounded } from \"@mui/icons-material\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\n\r\ninterface Props extends UseControllerProps{\r\n    label:string;\r\n    multiline?:boolean;\r\n    rows?:number;\r\n    type?:string;\r\n}\r\n\r\nexport default function AppTextInput(props:Props){\r\n    const {fieldState, field} = useController({...props, defaultValue:''})\r\n    return (\r\n        <TextField \r\n        {...props}\r\n        {...field}\r\n        multiline={props.multiline}\r\n        rows={props.rows}\r\n        type={props.type}\r\n        fullWidth\r\n        variant=\"outlined\"\r\n        error={!!fieldState.error}\r\n        helperText={fieldState.error?.message}\r\n        />\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutValidation.ts",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketTable.tsx",[],[],"D:\\Project\\client\\src\\Features\\Orders\\Orders.tsx",["301","302","303"],[],"import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\r\nimport { Component, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Agent from \"../../App/Api/Agent\";\r\nimport LoadingComponent from \"../../App/Layout/LoadingComponent\";\r\nimport { Order } from \"../../App/Models/Order\";\r\n\r\n\r\nexport default function Orders() {\r\n\r\n    const [orders, setOrders] = useState<Order[] | null> (null);\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        Agent.Orders.list()\r\n        .then(orders => setOrders(orders))\r\n        .catch(err => console.log(err))\r\n        .finally(() => setLoading(false))\r\n    }, [])\r\n    \r\n  const navigate = useNavigate();\r\n\r\n  const toOrderDetail=(id:number)=>{\r\n  navigate('./OrderDetail',{state:{id}});\r\n  }\r\n\r\n    if(loading) return <LoadingComponent message=\"Loading Your Orders...\"/>\r\n    return(\r\n        <TableContainer component={Paper} sx={{marginTop:2}}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Order Number</TableCell>\r\n              <TableCell align=\"right\">Total</TableCell>\r\n              <TableCell align=\"right\">Order Date</TableCell>\r\n              <TableCell align=\"right\">Order Status</TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders?.map((order) => (\r\n              <TableRow\r\n                key={order.id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {order.id}\r\n                </TableCell>\r\n                <TableCell align=\"right\">${order.total.toFixed(2)}</TableCell>\r\n                <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\r\n                <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                <TableCell align=\"right\">\r\n                <Button component={Link} to={`/orderDetail/${order.id}`} size=\"small\">View</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n}","D:\\Project\\client\\src\\App\\Models\\Order.ts",[],[],"D:\\Project\\client\\src\\Features\\Orders\\OrderDetail.tsx",["304","305","306","307","308"],[],"import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button, Typography, Box, Avatar, Grid } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\"\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Agent from \"../../App/Api/Agent\"\r\nimport LoadingComponent from \"../../App/Layout/LoadingComponent\";\r\nimport { Order } from \"../../App/Models/Order\";\r\n\r\n\r\n\r\nexport default function OrderDetail() {\r\n\r\n    const [order, setOrder] = useState<Order | null>();\r\n    const [loading, setLoading] = useState(true);\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    useEffect(() => {\r\n        Agent.Orders.fetch(Number(id))\r\n            .then(order => setOrder(order))\r\n            .catch(err => console.log(err))\r\n            .finally(() => setLoading(false))\r\n    }, [id])\r\n    \r\n    return (\r\n        <>\r\n        \r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>#Order {order?.id} - {order?.orderStatus}</Typography>\r\n                <Button sx={{ m: 2 }} size='large' variant=\"contained\"\r\n                    component={Link} to={'/Order'}\r\n                >Back to Orders</Button>\r\n            </Box>\r\n            <TableContainer component={Paper} sx={{ marginTop: 2 }}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Product Name</TableCell>\r\n                            <TableCell align=\"right\">Image</TableCell>\r\n                            <TableCell align=\"right\">Price</TableCell>\r\n                            <TableCell align=\"right\">Quantity</TableCell>\r\n                            <TableCell align=\"right\">Subtotal</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {order?.orderItemsDto.map((order) => (\r\n                            <TableRow\r\n                                key={order.productId}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {order.productName}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <img src={order.pictureUrl} style={{ height: 50, marginRight: 20 }}></img>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">${order.price.toFixed(2)}</TableCell>\r\n                                <TableCell align=\"right\">{order.quantity}</TableCell>\r\n                                <TableCell align=\"right\">${(order.price * order.quantity).toFixed(2)}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutWrapper.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\StripeInput.tsx",[],[],"D:\\Project\\client\\src\\App\\hooks\\useProducts.tsx",[],[],"D:\\Project\\client\\src\\Features\\Admin\\Inventory.tsx",[],[],"D:\\Project\\client\\src\\Features\\Admin\\productForm.tsx",["309"],[],"import { Typography, Grid, Paper, Box, Button } from \"@mui/material\";\r\nimport { useEffect } from \"react\";\r\nimport { FieldValues, useForm } from \"react-hook-form\";\r\nimport AppDropzone from \"../../App/Components/AppDropzone\";\r\nimport AppSelectList from \"../../App/Components/AppSelectList\";\r\nimport AppTextInput from \"../../App/Components/AppTextInput\";\r\nimport useProducts from \"../../App/hooks/useProducts\";\r\nimport { Product } from \"../../App/Models/Product\";\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { ValidationSchema } from \"./productValidation\";\r\nimport Agent from \"../../App/Api/Agent\";\r\nimport { useAppDispatch } from \"../../App/Store/ConfigureStore\";\r\nimport { setProduct } from \"../Catalog/CatalogSlice\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\n\r\ninterface Props {\r\n    product?: Product;\r\n    cancelEdit: () => void;\r\n}\r\n\r\nexport default function ProductForm({ product, cancelEdit }: Props) {\r\n    const { control, reset, handleSubmit, watch, formState: { isDirty, isSubmitting } } = useForm({\r\n        resolver: yupResolver(ValidationSchema)\r\n    });\r\n    const { gender, size } = useProducts();\r\n    const watchFile = watch('file', null);\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (product && !watchFile && !isDirty) reset(product);\r\n        return () => {\r\n            if (watchFile) URL.revokeObjectURL(watchFile.preview);\r\n        }\r\n    }, [product, reset, watchFile, isDirty]);\r\n\r\n    async function handleSubmitData(data: FieldValues) {\r\n        try {\r\n            let response: Product;\r\n            if (product) {\r\n                response = await Agent.Admin.updateProduct(data);\r\n            } else {\r\n                response = await Agent.Admin.createProduct(data);\r\n            }\r\n            dispatch(setProduct(response));\r\n            cancelEdit();\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    return (\r\n        <Box component={Paper} sx={{ p: 2, mt: 2 }}>\r\n            <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\r\n                Product Details\r\n            </Typography>\r\n            <form onSubmit={handleSubmit(handleSubmitData)}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <AppTextInput control={control} name='name' label='Product Name' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <AppTextInput type=\"number\" control={control} name='price' label='Price' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppSelectList control={control} items={gender} name='gender' label=\"Gender\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppSelectList control={control} items={size} name='size' label=\"Size\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <AppTextInput control={control} type='number' name='quantityInStock' label='Quantity in Stock' />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <AppTextInput control={control} multiline={true} rows={3} name='description' label='Description' />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n                            <AppDropzone control={control} name='file' />\r\n                            {watchFile ? (\r\n                                <img src={watchFile.preview} alt=\"preview\" style={{ maxHeight: 200 }} />\r\n                            ) : (\r\n                                <img src={product?.pictureUrl} style={{ maxHeight: 200 }} />\r\n                            )}\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n                <Box display='flex' justifyContent='space-between' sx={{ mt: 3 }}>\r\n                    <Button onClick={() => cancelEdit()} variant='contained' color='inherit'>Cancel</Button>\r\n                    <LoadingButton loading={isSubmitting} type='submit' variant='contained' color='success'>Submit</LoadingButton>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    )\r\n}","D:\\Project\\client\\src\\App\\Components\\AppSelectList.tsx",["310"],[],"import { FormControl, InputLabel, Select, MenuItem, useControlled, FormHelperText } from \"@mui/material\";\r\nimport { useController, UseControllerProps } from \"react-hook-form\";\r\n\r\n\r\ninterface Props extends UseControllerProps {\r\n    label: string;\r\n    items: string[];\r\n}\r\nexport default function AppSelectList(props: Props) {\r\n\r\n    const { fieldState, field } = useController({ ...props, defaultValue: '' });\r\n    return (\r\n        <FormControl fullWidth error={!!fieldState.error}>\r\n            <InputLabel>{props.label}</InputLabel>\r\n            <Select\r\n                value={field.value}\r\n                label={props.label}\r\n                onChange={field.onChange}>\r\n                {props.items.map((item, index) => (\r\n                    <MenuItem key={index} value={item}>{item}</MenuItem>\r\n                ))}\r\n            </Select>\r\n            <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}","D:\\Project\\client\\src\\App\\Components\\AppDropzone.tsx",["311"],[],"import { UploadFile } from '@mui/icons-material';\r\nimport { FormControl, FormHelperText, Typography, useControlled } from '@mui/material'\r\nimport React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { useController, UseControllerProps } from 'react-hook-form'\r\n\r\ninterface Props extends UseControllerProps {\r\n\r\n}\r\n\r\nexport default function AppDropzone(props: Props) {\r\n\r\n    const { fieldState, field } = useController({ ...props, defaultValue: null });\r\n\r\n    const dzStyle = {\r\n        display:'flex',\r\n        border:'dashed 3px #eee',\r\n        borderColor:\"#eee\",\r\n        borderRadius:'5px',\r\n        paddingTop:'30px',\r\n        alignItems:'center',\r\n        height:200,\r\n        width:500\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor:'green'\r\n    }\r\n\r\n    //uploading image\r\n    const onDrop = useCallback((acceptedFile:any) => {\r\n        acceptedFile[0] = Object.assign(acceptedFile[0],\r\n            { preview: URL.createObjectURL(acceptedFile[0]) });\r\n        field.onChange(acceptedFile[0]);\r\n    }, [field])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div {...getRootProps()}>\r\n           <FormControl style={isDragActive ? {...dzStyle, ...dzActive}: dzStyle} error={!!fieldState.error}>\r\n                <input {...getInputProps()}/>\r\n                <UploadFile sx={{fontSize:'60px'}}/>\r\n                <Typography variant='h4'>Drop picture here</Typography>\r\n                <FormHelperText>{fieldState.error?.message}</FormHelperText>\r\n           </FormControl>\r\n        </div>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Admin\\productValidation.ts",[],[],"D:\\Project\\client\\src\\Features\\profile\\myProfile.tsx",[],[],{"ruleId":"312","severity":1,"message":"313","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":16},{"ruleId":"312","severity":1,"message":"316","line":2,"column":30,"nodeType":"314","messageId":"315","endLine":2,"endColumn":36},{"ruleId":"312","severity":1,"message":"317","line":2,"column":66,"nodeType":"314","messageId":"315","endLine":2,"endColumn":76},{"ruleId":"312","severity":1,"message":"318","line":19,"column":59,"nodeType":"314","messageId":"315","endLine":19,"endColumn":73},{"ruleId":"312","severity":1,"message":"319","line":2,"column":80,"nodeType":"314","messageId":"315","endLine":2,"endColumn":89},{"ruleId":"320","severity":1,"message":"321","line":23,"column":13,"nodeType":"322","endLine":23,"endColumn":46},{"ruleId":"323","severity":1,"message":"324","line":19,"column":25,"nodeType":"322","endLine":24,"endColumn":34},{"ruleId":"323","severity":1,"message":"324","line":27,"column":25,"nodeType":"322","endLine":32,"endColumn":34},{"ruleId":"323","severity":1,"message":"324","line":35,"column":25,"nodeType":"322","endLine":40,"endColumn":34},{"ruleId":"312","severity":1,"message":"325","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":16},{"ruleId":"312","severity":1,"message":"326","line":1,"column":24,"nodeType":"314","messageId":"315","endLine":1,"endColumn":28},{"ruleId":"312","severity":1,"message":"327","line":1,"column":30,"nodeType":"314","messageId":"315","endLine":1,"endColumn":38},{"ruleId":"312","severity":1,"message":"328","line":1,"column":40,"nodeType":"314","messageId":"315","endLine":1,"endColumn":54},{"ruleId":"312","severity":1,"message":"329","line":1,"column":56,"nodeType":"314","messageId":"315","endLine":1,"endColumn":68},{"ruleId":"312","severity":1,"message":"330","line":6,"column":30,"nodeType":"314","messageId":"315","endLine":6,"endColumn":39},{"ruleId":"312","severity":1,"message":"331","line":3,"column":16,"nodeType":"314","messageId":"315","endLine":3,"endColumn":21},{"ruleId":"312","severity":1,"message":"332","line":3,"column":23,"nodeType":"314","messageId":"315","endLine":3,"endColumn":34},{"ruleId":"320","severity":1,"message":"321","line":9,"column":9,"nodeType":"322","endLine":9,"endColumn":36},{"ruleId":"312","severity":1,"message":"333","line":14,"column":10,"nodeType":"314","messageId":"315","endLine":14,"endColumn":14},{"ruleId":"312","severity":1,"message":"334","line":35,"column":12,"nodeType":"314","messageId":"315","endLine":35,"endColumn":19},{"ruleId":"335","severity":1,"message":"336","line":123,"column":37,"nodeType":"322","messageId":"337","endLine":123,"endColumn":110,"fix":"338"},{"ruleId":"339","severity":1,"message":"340","line":58,"column":40,"nodeType":"341","messageId":"342","endLine":58,"endColumn":41,"suggestions":"343"},{"ruleId":"339","severity":1,"message":"344","line":58,"column":44,"nodeType":"341","messageId":"342","endLine":58,"endColumn":45,"suggestions":"345"},{"ruleId":"312","severity":1,"message":"346","line":14,"column":10,"nodeType":"314","messageId":"315","endLine":14,"endColumn":17},{"ruleId":"312","severity":1,"message":"347","line":1,"column":16,"nodeType":"314","messageId":"315","endLine":1,"endColumn":22},{"ruleId":"312","severity":1,"message":"333","line":3,"column":10,"nodeType":"314","messageId":"315","endLine":3,"endColumn":14},{"ruleId":"312","severity":1,"message":"348","line":1,"column":10,"nodeType":"314","messageId":"315","endLine":1,"endColumn":24},{"ruleId":"312","severity":1,"message":"349","line":2,"column":10,"nodeType":"314","messageId":"315","endLine":2,"endColumn":19},{"ruleId":"312","severity":1,"message":"350","line":4,"column":10,"nodeType":"314","messageId":"315","endLine":4,"endColumn":17},{"ruleId":"312","severity":1,"message":"351","line":24,"column":9,"nodeType":"314","messageId":"315","endLine":24,"endColumn":22},{"ruleId":"312","severity":1,"message":"325","line":1,"column":108,"nodeType":"314","messageId":"315","endLine":1,"endColumn":114},{"ruleId":"312","severity":1,"message":"352","line":1,"column":116,"nodeType":"314","messageId":"315","endLine":1,"endColumn":120},{"ruleId":"312","severity":1,"message":"353","line":5,"column":8,"nodeType":"314","messageId":"315","endLine":5,"endColumn":24},{"ruleId":"312","severity":1,"message":"334","line":13,"column":12,"nodeType":"314","messageId":"315","endLine":13,"endColumn":19},{"ruleId":"320","severity":1,"message":"321","line":53,"column":37,"nodeType":"322","endLine":53,"endColumn":105},{"ruleId":"320","severity":1,"message":"321","line":81,"column":33,"nodeType":"322","endLine":81,"endColumn":93},{"ruleId":"312","severity":1,"message":"354","line":1,"column":53,"nodeType":"314","messageId":"315","endLine":1,"endColumn":66},{"ruleId":"312","severity":1,"message":"354","line":2,"column":51,"nodeType":"314","messageId":"315","endLine":2,"endColumn":64},"@typescript-eslint/no-unused-vars","'Margin' is defined but never used.","Identifier","unusedVar","'colors' is defined but never used.","'makeStyles' is defined but never used.","'productsLoaded' is assigned a value but never used.","'TextField' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Avatar' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemText' is defined but never used.","'setBasket' is defined but never used.","'Route' is defined but never used.","'useNavigate' is defined but never used.","'Link' is defined but never used.","'loading' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"355","text":"356"},"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["357","358"],"Unnecessary escape character: \\@.",["359","360"],"'history' is defined but never used.","'Button' is defined but never used.","'PropaneRounded' is defined but never used.","'Component' is defined but never used.","'NavLink' is defined but never used.","'toOrderDetail' is assigned a value but never used.","'Grid' is defined but never used.","'LoadingComponent' is defined but never used.","'useControlled' is defined but never used.",[5112,5112]," rel=\"noreferrer\"",{"messageId":"361","fix":"362","desc":"363"},{"messageId":"364","fix":"365","desc":"366"},{"messageId":"361","fix":"367","desc":"363"},{"messageId":"364","fix":"368","desc":"366"},"removeEscape",{"range":"369","text":"370"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"371","text":"372"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"373","text":"370"},{"range":"374","text":"372"},[2462,2463],"",[2462,2462],"\\",[2466,2467],[2466,2466]]