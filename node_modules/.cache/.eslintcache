[{"D:\\Project\\client\\src\\index.tsx":"1","D:\\Project\\client\\src\\reportWebVitals.ts":"2","D:\\Project\\client\\src\\App\\Layout\\App.tsx":"3","D:\\Project\\client\\src\\App\\Layout\\Header.tsx":"4","D:\\Project\\client\\src\\Features\\Catalog\\Catalog.tsx":"5","D:\\Project\\client\\src\\Features\\Contact\\Contact.tsx":"6","D:\\Project\\client\\src\\Features\\Catalog\\ProductDetails.tsx":"7","D:\\Project\\client\\src\\Features\\About\\About.tsx":"8","D:\\Project\\client\\src\\Features\\Home\\Home.tsx":"9","D:\\Project\\client\\src\\Features\\Catalog\\ProductList.tsx":"10","D:\\Project\\client\\src\\Features\\Catalog\\ProductCard.tsx":"11","D:\\Project\\client\\src\\App\\Api\\Agent.ts":"12","D:\\Project\\client\\src\\App\\Errors\\ServerError.tsx":"13","D:\\Project\\client\\src\\App\\Errors\\NotFound.tsx":"14","D:\\Project\\client\\src\\App\\Layout\\LoadingComponent.tsx":"15","D:\\Project\\client\\src\\Features\\Basket\\BasketPage.tsx":"16","D:\\Project\\client\\src\\App\\Util\\Util.ts":"17","D:\\Project\\client\\src\\Features\\Basket\\BasketSummary.tsx":"18","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutPage.tsx":"19","D:\\Project\\client\\src\\App\\Store\\ConfigureStore.ts":"20","D:\\Project\\client\\src\\Features\\Basket\\BasketSlice.ts":"21","D:\\Project\\client\\src\\Features\\Catalog\\CatalogSlice.ts":"22","D:\\Project\\client\\src\\Features\\Catalog\\ProductSearch.tsx":"23","D:\\Project\\client\\src\\App\\Components\\RadioButtonGroup.tsx":"24","D:\\Project\\client\\src\\App\\Components\\CheckBoxButtons.tsx":"25","D:\\Project\\client\\src\\App\\Models\\pagination.ts":"26","D:\\Project\\client\\src\\App\\Components\\AppPagination.tsx":"27","D:\\Project\\client\\src\\Features\\Catalog\\ProductCardSkeleton.tsx":"28","D:\\Project\\client\\src\\Features\\Account\\Register.tsx":"29","D:\\Project\\client\\src\\Features\\Account\\Login.tsx":"30"},{"size":952,"mtime":1665384500361,"results":"31","hashOfConfig":"32"},{"size":440,"mtime":1663326605000,"results":"33","hashOfConfig":"32"},{"size":3139,"mtime":1666092329507,"results":"34","hashOfConfig":"32"},{"size":3471,"mtime":1666304001710,"results":"35","hashOfConfig":"32"},{"size":2808,"mtime":1666080607494,"results":"36","hashOfConfig":"32"},{"size":168,"mtime":1663327629000,"results":"37","hashOfConfig":"32"},{"size":4080,"mtime":1665961883777,"results":"38","hashOfConfig":"32"},{"size":2031,"mtime":1664413152403,"results":"39","hashOfConfig":"32"},{"size":161,"mtime":1663327649000,"results":"40","hashOfConfig":"32"},{"size":946,"mtime":1666080307944,"results":"41","hashOfConfig":"32"},{"size":2348,"mtime":1665962533540,"results":"42","hashOfConfig":"32"},{"size":3137,"mtime":1666092068965,"results":"43","hashOfConfig":"32"},{"size":1043,"mtime":1666306163926,"results":"44","hashOfConfig":"32"},{"size":640,"mtime":1664443127144,"results":"45","hashOfConfig":"32"},{"size":650,"mtime":1664444837349,"results":"46","hashOfConfig":"32"},{"size":3813,"mtime":1666092749998,"results":"47","hashOfConfig":"32"},{"size":149,"mtime":1664514761947,"results":"48","hashOfConfig":"32"},{"size":1764,"mtime":1665360490594,"results":"49","hashOfConfig":"32"},{"size":229,"mtime":1666306143057,"results":"50","hashOfConfig":"32"},{"size":669,"mtime":1665384124782,"results":"51","hashOfConfig":"32"},{"size":2650,"mtime":1665383080710,"results":"52","hashOfConfig":"32"},{"size":5255,"mtime":1666079351859,"results":"53","hashOfConfig":"32"},{"size":1019,"mtime":1665961420083,"results":"54","hashOfConfig":"32"},{"size":626,"mtime":1665962906927,"results":"55","hashOfConfig":"32"},{"size":1054,"mtime":1665965934413,"results":"56","hashOfConfig":"32"},{"size":323,"mtime":1666043921228,"results":"57","hashOfConfig":"32"},{"size":1000,"mtime":1666078448884,"results":"58","hashOfConfig":"32"},{"size":1296,"mtime":1666079983859,"results":"59","hashOfConfig":"32"},{"size":86,"mtime":1666092133024,"results":"60","hashOfConfig":"32"},{"size":2225,"mtime":1666306829389,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1fk7t8b",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"65"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"65"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"65"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"65"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"65"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"65"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Project\\client\\src\\index.tsx",[],[],[],"D:\\Project\\client\\src\\reportWebVitals.ts",[],[],"D:\\Project\\client\\src\\App\\Layout\\App.tsx",["162","163"],[],"import Catalog from \"../../Features/Catalog/Catalog\";\r\nimport { Container, createTheme, CssBaseline, Switch, ThemeProvider, Typography } from \"@mui/material\";\r\nimport Header from \"./Header\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport HomePage from \"../../Features/Home/Home\";\r\nimport AboutPage from \"../../Features/About/About\";\r\nimport ContactPage from \"../../Features/Contact/Contact\";\r\nimport ProductDetails from \"../../Features/Catalog/ProductDetails\";\r\nimport  'react-toastify/dist/ReactToastify.css'\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport ServerError from \"../Errors/ServerError\";\r\nimport NotFound from \"../Errors/NotFound\";\r\nimport BasketPage from \"../../Features/Basket/BasketPage\";\r\nimport { getCookie } from \"../Util/Util\";\r\nimport Agent from \"../Api/Agent\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport CheckoutPage from \"../../Features/Checkout/CheckoutPage\";\r\nimport { useAppDispatch } from \"../Store/ConfigureStore\";\r\nimport { setBasket } from \"../../Features/Basket/BasketSlice\";\r\nimport Register from \"../../Features/Account/Register\";\r\nimport Login from \"../../Features/Account/Login\";\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const[loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const buyerId = getCookie('buyerId')\r\n    if(buyerId) {\r\n      Agent.Basket.get()\r\n        .then(basket => dispatch(setBasket(basket)))\r\n        .catch(error => console.log(error))\r\n        .finally(() => setLoading(false));\r\n    }else {\r\n      setLoading(false)\r\n    }\r\n  },[dispatch])\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const paletteType = darkMode ? 'dark' : 'light';\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      mode: paletteType,\r\n      background: {\r\n        default: paletteType === 'light' ? '#E5E4E2' : '#121212'\r\n      }\r\n    }\r\n  })\r\n\r\n  function handleThemeChange() {\r\n    setDarkMode(!darkMode)\r\n  }\r\n\r\n  if(loading) return <LoadingComponent message=\"Initializing app...\"/>\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ToastContainer position='bottom-right' hideProgressBar theme=\"colored\"></ToastContainer>\r\n      <CssBaseline></CssBaseline>\r\n      <Header darkMode={darkMode} handleThemeChange={handleThemeChange}></Header>\r\n      <Container>\r\n        <Routes>\r\n            <Route path='/Home' element={<HomePage/>} />\r\n            <Route path='/Catalog' element={<Catalog/>} />\r\n            <Route path='/Catalog/:id' element={<ProductDetails />} />\r\n            <Route path='/about' element={<AboutPage />} />\r\n            <Route path='/contact' element={<ContactPage />} />\r\n            <Route path='/server-error' element={<ServerError/>} />\r\n            <Route path='/basket' element={<BasketPage/>} />\r\n            <Route path='/checkoutPage' element={<CheckoutPage/>} />\r\n            <Route path='/login' element={<Login/>} />\r\n            <Route path='/register' element={<Register/>} />\r\n            <Route path='*' element={<NotFound/>} />\r\n        </Routes>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Project\\client\\src\\App\\Layout\\Header.tsx",["164","165","166"],[],"import { Margin, ShoppingCart } from \"@mui/icons-material\";\r\nimport { AppBar, Badge, Box, colors, IconButton, List, ListItem, makeStyles, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport { Container } from \"@mui/system\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../Store/ConfigureStore\";\r\n\r\n\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }\r\n]\r\nconst rightLinks = [\r\n    { title: 'register', path: '/register' },\r\n    { title: 'login', path: '/login' }\r\n]\r\n\r\nconst navStyle = {\r\n    color:'White',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: '#FBDA43'\r\n    },\r\n    '&.active': {\r\n        color: '#FBDA43'\r\n    }\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n\r\n    const {basket} = useAppSelector(state => state.basket);\r\n    \r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Container maxWidth=\"xl\">\r\n            <Toolbar sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n            }}>\r\n                <Box\r\n                    component=\"img\"\r\n                    sx={{\r\n                        height: 70,\r\n                        marginRight:-23\r\n                    }}\r\n                    alt=\"cool-Collection logo\"\r\n                    src=\"../cool.png\"\r\n                ></Box>\r\n                <Box sx={{ml:2}}>\r\n                    <Typography variant=\"h6\" component={NavLink}\r\n                        to='/home'\r\n                        end\r\n                        sx={navStyle}>\r\n                        COOL COLLECTIONS\r\n                    </Typography>\r\n                    <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                </Box>\r\n\r\n                <List sx={{ display: 'flex'}}>\r\n                    {midLinks.map(({ title, path }) => (\r\n                        <ListItem component={NavLink}\r\n                            to={path}\r\n                            key={path}\r\n                            sx={navStyle}>\r\n                            {title.toUpperCase()}\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Box display='flex' alignItems='center' >\r\n                    <IconButton component={Link} to={`/basket`} size=\"medium\" sx={navStyle}>\r\n                        <Badge badgeContent={itemCount} color='secondary'>\r\n                            <ShoppingCart></ShoppingCart>\r\n                        </Badge>\r\n                    </IconButton>\r\n                    <List sx={{ display: 'flex', color:'#2676CE'}}>\r\n                        {rightLinks.map(({ title, path }) => (\r\n                            <ListItem component={NavLink}\r\n                                to={path}\r\n                                key={path}\r\n                                sx={navStyle}>\r\n                                {title.toUpperCase()}\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Box>\r\n            </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Catalog\\Catalog.tsx",[],[],"D:\\Project\\client\\src\\Features\\Contact\\Contact.tsx",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductDetails.tsx",["167"],[],"import { LoadingButton } from \"@mui/lab\";\r\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect} from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport NotFound from \"../../App/Errors/NotFound\";\r\nimport LoadingComponent from \"../../App/Layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport { addBasketItemAsync } from \"../Basket/BasketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./CatalogSlice\";\r\n\r\n\r\n\r\n\r\nexport default function ProductDetails() {\r\n\r\n    const {status} = useAppSelector(state => state.basket);\r\n    const {status:productStatus} = useAppSelector(state => state.catalog)\r\n    const dispatch = useAppDispatch();\r\n    const { id } = useParams<{id: string}>();\r\n    const product = useAppSelector(state => productSelectors.selectById(state, Number(id)));\r\n\r\n    useEffect(() => {\r\n      if(!product) dispatch(fetchProductAsync(Number(id)))\r\n    }, [id, dispatch, product])\r\n\r\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading Product'/>\r\n    if (!product) return <NotFound/>\r\n\r\n    return (\r\n        <Grid container spacing={6} sx={{mt:10}}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>{product.name}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant='h4'>${product.price.toFixed(2)}</Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Size</TableCell>\r\n                                <TableCell>{product.size}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Gender</TableCell>\r\n                                <TableCell>{product.gender}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in Stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2} marginTop={2}>\r\n                <Grid item xs={6}>\r\n                    <Link to='/catalog' style={{textDecoration:'none'}}>\r\n                    <LoadingButton sx={{height:'55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant=\"contained\"\r\n                            fullWidth>Go Back</LoadingButton>\r\n                    </Link>                     \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                            <LoadingButton sx={{height:'55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant=\"contained\"\r\n                            fullWidth \r\n                            loading={status.includes('pendingAddItem' + product.id)}\r\n                            onClick={() => dispatch(addBasketItemAsync({productId:product.id, quantity:1}))} >Add to Cart</LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\About\\About.tsx",[],[],"D:\\Project\\client\\src\\Features\\Home\\Home.tsx",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductList.tsx",["168","169","170","171","172"],[],"import { Avatar, Grid, List, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\r\nimport { Product } from \"../../App/Models/Product\";\r\nimport { useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport ProductsCard from \"./ProductCard\";\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const { productsLoaded } = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={4}>\r\n            {products.map((product) => {\r\n                return (\r\n                    <Grid item xs={4} key={product.id}>\r\n                        {!productsLoaded ? (<ProductCardSkeleton />) : (\r\n                            <ProductsCard product={product}></ProductsCard>\r\n                        )}\r\n\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </Grid>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Catalog\\ProductCard.tsx",["173","174","175","176","177","178","179","180"],[],"import { ListItem, ListItemAvatar, Avatar, ListItemText, Button, Card, CardActions, CardContent, CardMedia, Typography, Box, Grid, CardHeader } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Agent from \"../../App/Api/Agent\";\r\nimport { Product } from \"../../App/Models/Product\";\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { useAppDispatch, useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport { addBasketItemAsync, setBasket } from \"../Basket/BasketSlice\";\r\n\r\ninterface Props {\r\n    product: Product;\r\n}\r\n\r\nexport default function ProductsCard({ product }: Props) {\r\n    const { status } = useAppSelector(state => state.basket)\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader color='#00b1d2'\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: \"secondary.main\" }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name.toUpperCase()}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: 'bold', color: 'primary.main' }\r\n                }\r\n                }\r\n            />\r\n            <CardMedia\r\n                component=\"img\"\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n                alt=\"Photo\"\r\n                sx={{p:2}}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" color='primary.main'>\r\n                    ${(product.price).toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.size} / {product.gender}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <CardActions>\r\n                    <LoadingButton loading={status.includes('pendingAddItem' + product.id)}\r\n                        onClick={() => dispatch(addBasketItemAsync({ productId: product.id , quantity:1}))}\r\n                        size=\"small\">Add to cart</LoadingButton>\r\n                    <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n                </CardActions>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","D:\\Project\\client\\src\\App\\Api\\Agent.ts",["181"],[],"import { PaginatedResponse } from './../Models/pagination';\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { request } from 'http';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\n\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api/';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.response.use(async response => {\r\n    await sleep();\r\n\r\n    const pagination = response.headers['pagination'];\r\n\r\n    if(pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\r\n       return response; \r\n    }\r\n\r\n    return response\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error'\r\n            });\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response);\r\n});\r\n\r\nconst requests = {\r\n    get: (url: string, params?:URLSearchParams) => axios.get(url, {params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params:URLSearchParams) => requests.get('products', params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters:() => requests.get('products/filters')\r\n}\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get('error/bad-request'),\r\n    get401Error: () => requests.get('error/unauthorized'),\r\n    get404Error: () => requests.get('error/not-found'),\r\n    get500Error: () => requests.get('error/server-error'),\r\n    getValidationError: () => requests.get('error/validation-error'),\r\n}\r\n\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\r\n}\r\n\r\nconst Account = {\r\n    login:(values:any) => requests.post('account/login',values),\r\n    register:(values:any) => requests.post('account/register',values),\r\n    current:(values:any) => requests.get('account/currentUser')\r\n}\r\n\r\nconst Agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account\r\n}\r\n\r\nexport default Agent;","D:\\Project\\client\\src\\App\\Errors\\ServerError.tsx",["182","183"],[],"D:\\Project\\client\\src\\App\\Errors\\NotFound.tsx",["184"],[],"import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\nreturn(\r\n    <Container component={Paper} sx={{marginTop:2, display:'flex-box',textAlign:'center'}}>\r\n        <Typography gutterBottom variant=\"h3\" color=\"#E8AC67\" marginTop='30px' paddingTop=\"30px\">\r\n            Oops We could not found what you are looking for!</Typography>\r\n        <img src=\"../notfound.png\"></img>\r\n        <Divider></Divider>\r\n        <Button sx={{fontWeight:'800'}} fullWidth component={Link} to='/catalog'>Go back to Shop</Button>\r\n    </Container>\r\n)\r\n}","D:\\Project\\client\\src\\App\\Layout\\LoadingComponent.tsx",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketPage.tsx",["185","186","187"],[],"import { Add, Delete, Remove } from \"@mui/icons-material\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Box, Button, Grid, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Agent from \"../../App/Api/Agent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport { addBasketItemAsync, removeBasketItemAsync, setBasket } from \"./BasketSlice\";\r\nimport BasketSummary from \"./BasketSummary\";\r\n\r\n\r\nexport default function BasketPage() {\r\n\r\n  const { basket, status } = useAppSelector(state => state.basket);\r\n  \r\n  const dispatch = useAppDispatch();\r\n\r\n  if(!basket) return <Typography variant=\"h3\" textAlign=\"center\" marginTop={3}>Your Basket is Empty</Typography>\r\n  return (\r\n    <>\r\n      <TableContainer component={Paper} sx={{ marginTop: 3 }}>\r\n        <Table sx={{ minWidth: 650 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Product</TableCell>\r\n              <TableCell align=\"right\">Price</TableCell>\r\n              <TableCell align=\"center\">Quantity</TableCell>\r\n              <TableCell align=\"right\">Subtotal</TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>      \r\n            {basket.items.map((item) => (\r\n              <TableRow\r\n                key={item.productId}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <Box display='flex' alignItems='center'>\r\n                    <img src={item.pictureUrl} alt={item.name} style={{ height: 50, marginRight: 20 }}></img>\r\n                    <span>{item.name}</span>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell align=\"right\">${item.price.toFixed(2)}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  <LoadingButton\r\n                    loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\r\n                    onClick={() => dispatch(removeBasketItemAsync\r\n                      ({ productId: item.productId, quantity: 1, name: 'rem' }))}\r\n                    color=\"primary\">\r\n                    <Remove></Remove>\r\n                  </LoadingButton>\r\n                  {item.quantity}\r\n                  <LoadingButton\r\n                    loading={status === 'pendingAddItem' + item.productId}\r\n                    onClick={() => dispatch(addBasketItemAsync({ productId: item.productId, quantity: 1 }))} color=\"primary\">\r\n                    <Add></Add>\r\n                  </LoadingButton>\r\n                </TableCell>\r\n                <TableCell align=\"right\">${(item.quantity * item.price).toFixed(2)}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <LoadingButton\r\n                    loading={status.includes('pendingRemoveItem' + item.productId + 'del')}\r\n                    onClick={() => dispatch(removeBasketItemAsync({ productId: item.productId, quantity: item.quantity, name: 'del' }))}\r\n                    color=\"error\">\r\n                    <Delete></Delete>\r\n                  </LoadingButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Grid container>\r\n        <Grid item xs={6} />\r\n        <Grid item xs={6}>\r\n          <BasketSummary></BasketSummary>\r\n          <Button component={Link}\r\n            to='/checkoutPage'\r\n            variant=\"contained\"\r\n            size='large'\r\n            fullWidth\r\n            sx={{ marginTop: 2 }}\r\n          >Checkout</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  )\r\n};\r\n","D:\\Project\\client\\src\\App\\Util\\Util.ts",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketSummary.tsx",["188","189","190"],[],"import { TableContainer, Paper, Table, TableBody, TableRow, TableCell, Typography, ListItem } from \"@mui/material\";\r\nimport { Basket } from \"../../App/Models/Basket\";\r\nimport { useAppSelector } from \"../../App/Store/ConfigureStore\";\r\n\r\n\r\nexport default function BasketSummary() {\r\n\r\n    const {basket} = useAppSelector(state => state.basket)\r\n    const subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity*item.price), 0) ?? 0;;\r\n    const deliveryFee = subtotal > 100 ? 0 : 15;\r\n\r\n    return (\r\n        <>\r\n            <TableContainer component={Paper} variant={'outlined'}>\r\n                <Table>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Subtotal</TableCell>\r\n                            <TableCell align=\"right\">${subtotal.toFixed(2)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\r\n                            <TableCell align=\"right\">${deliveryFee.toFixed(2)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell colSpan={2}>Total</TableCell>\r\n                            <TableCell align=\"right\">${(subtotal + deliveryFee).toFixed(2)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>\r\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutPage.tsx",[],[],"D:\\Project\\client\\src\\App\\Store\\ConfigureStore.ts",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketSlice.ts",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\CatalogSlice.ts",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductSearch.tsx",[],[],"D:\\Project\\client\\src\\App\\Components\\RadioButtonGroup.tsx",[],[],"D:\\Project\\client\\src\\App\\Components\\CheckBoxButtons.tsx",[],[],"D:\\Project\\client\\src\\App\\Models\\pagination.ts",[],[],"D:\\Project\\client\\src\\App\\Components\\AppPagination.tsx",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductCardSkeleton.tsx",[],[],"D:\\Project\\client\\src\\Features\\Account\\Register.tsx",[],[],"D:\\Project\\client\\src\\Features\\Account\\Login.tsx",[],[],{"ruleId":"191","severity":1,"message":"192","line":2,"column":47,"nodeType":"193","messageId":"194","endLine":2,"endColumn":53},{"ruleId":"191","severity":1,"message":"195","line":2,"column":70,"nodeType":"193","messageId":"194","endLine":2,"endColumn":80},{"ruleId":"191","severity":1,"message":"196","line":1,"column":10,"nodeType":"193","messageId":"194","endLine":1,"endColumn":16},{"ruleId":"191","severity":1,"message":"197","line":2,"column":30,"nodeType":"193","messageId":"194","endLine":2,"endColumn":36},{"ruleId":"191","severity":1,"message":"198","line":2,"column":66,"nodeType":"193","messageId":"194","endLine":2,"endColumn":76},{"ruleId":"191","severity":1,"message":"199","line":2,"column":80,"nodeType":"193","messageId":"194","endLine":2,"endColumn":89},{"ruleId":"191","severity":1,"message":"200","line":1,"column":10,"nodeType":"193","messageId":"194","endLine":1,"endColumn":16},{"ruleId":"191","severity":1,"message":"201","line":1,"column":24,"nodeType":"193","messageId":"194","endLine":1,"endColumn":28},{"ruleId":"191","severity":1,"message":"202","line":1,"column":30,"nodeType":"193","messageId":"194","endLine":1,"endColumn":38},{"ruleId":"191","severity":1,"message":"203","line":1,"column":40,"nodeType":"193","messageId":"194","endLine":1,"endColumn":54},{"ruleId":"191","severity":1,"message":"204","line":1,"column":56,"nodeType":"193","messageId":"194","endLine":1,"endColumn":68},{"ruleId":"191","severity":1,"message":"202","line":1,"column":10,"nodeType":"193","messageId":"194","endLine":1,"endColumn":18},{"ruleId":"191","severity":1,"message":"203","line":1,"column":20,"nodeType":"193","messageId":"194","endLine":1,"endColumn":34},{"ruleId":"191","severity":1,"message":"204","line":1,"column":44,"nodeType":"193","messageId":"194","endLine":1,"endColumn":56},{"ruleId":"191","severity":1,"message":"205","line":1,"column":121,"nodeType":"193","messageId":"194","endLine":1,"endColumn":124},{"ruleId":"191","severity":1,"message":"206","line":1,"column":126,"nodeType":"193","messageId":"194","endLine":1,"endColumn":130},{"ruleId":"191","severity":1,"message":"207","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":18},{"ruleId":"191","severity":1,"message":"208","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":13},{"ruleId":"191","severity":1,"message":"209","line":8,"column":30,"nodeType":"193","messageId":"194","endLine":8,"endColumn":39},{"ruleId":"191","severity":1,"message":"210","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":17},{"ruleId":"191","severity":1,"message":"211","line":3,"column":16,"nodeType":"193","messageId":"194","endLine":3,"endColumn":21},{"ruleId":"191","severity":1,"message":"212","line":3,"column":23,"nodeType":"193","messageId":"194","endLine":3,"endColumn":34},{"ruleId":"213","severity":1,"message":"214","line":9,"column":9,"nodeType":"215","endLine":9,"endColumn":36},{"ruleId":"191","severity":1,"message":"207","line":4,"column":10,"nodeType":"193","messageId":"194","endLine":4,"endColumn":18},{"ruleId":"191","severity":1,"message":"208","line":6,"column":8,"nodeType":"193","messageId":"194","endLine":6,"endColumn":13},{"ruleId":"191","severity":1,"message":"209","line":8,"column":53,"nodeType":"193","messageId":"194","endLine":8,"endColumn":62},{"ruleId":"191","severity":1,"message":"195","line":1,"column":72,"nodeType":"193","messageId":"194","endLine":1,"endColumn":82},{"ruleId":"191","severity":1,"message":"202","line":1,"column":84,"nodeType":"193","messageId":"194","endLine":1,"endColumn":92},{"ruleId":"191","severity":1,"message":"216","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":16},"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","'Margin' is defined but never used.","'colors' is defined but never used.","'makeStyles' is defined but never used.","'TextField' is defined but never used.","'Avatar' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemText' is defined but never used.","'Box' is defined but never used.","'Grid' is defined but never used.","'useState' is defined but never used.","'Agent' is defined but never used.","'setBasket' is defined but never used.","'request' is defined but never used.","'Route' is defined but never used.","'useNavigate' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Basket' is defined but never used."]