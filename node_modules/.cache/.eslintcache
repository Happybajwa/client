[{"D:\\Project\\client\\src\\index.tsx":"1","D:\\Project\\client\\src\\reportWebVitals.ts":"2","D:\\Project\\client\\src\\App\\Layout\\App.tsx":"3","D:\\Project\\client\\src\\App\\Layout\\Header.tsx":"4","D:\\Project\\client\\src\\Features\\Catalog\\Catalog.tsx":"5","D:\\Project\\client\\src\\Features\\Contact\\Contact.tsx":"6","D:\\Project\\client\\src\\Features\\Catalog\\ProductDetails.tsx":"7","D:\\Project\\client\\src\\Features\\About\\About.tsx":"8","D:\\Project\\client\\src\\Features\\Home\\Home.tsx":"9","D:\\Project\\client\\src\\Features\\Catalog\\ProductList.tsx":"10","D:\\Project\\client\\src\\Features\\Catalog\\ProductCard.tsx":"11","D:\\Project\\client\\src\\App\\Api\\Agent.ts":"12","D:\\Project\\client\\src\\App\\Errors\\ServerError.tsx":"13","D:\\Project\\client\\src\\App\\Errors\\NotFound.tsx":"14","D:\\Project\\client\\src\\App\\Layout\\LoadingComponent.tsx":"15","D:\\Project\\client\\src\\Features\\Basket\\BasketPage.tsx":"16","D:\\Project\\client\\src\\App\\Util\\Util.ts":"17","D:\\Project\\client\\src\\Features\\Basket\\BasketSummary.tsx":"18","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutPage.tsx":"19","D:\\Project\\client\\src\\App\\Store\\ConfigureStore.ts":"20","D:\\Project\\client\\src\\Features\\Basket\\BasketSlice.ts":"21","D:\\Project\\client\\src\\Features\\Catalog\\CatalogSlice.ts":"22","D:\\Project\\client\\src\\Features\\Catalog\\ProductSearch.tsx":"23","D:\\Project\\client\\src\\App\\Components\\RadioButtonGroup.tsx":"24","D:\\Project\\client\\src\\App\\Components\\CheckBoxButtons.tsx":"25","D:\\Project\\client\\src\\App\\Models\\pagination.ts":"26","D:\\Project\\client\\src\\App\\Components\\AppPagination.tsx":"27","D:\\Project\\client\\src\\Features\\Catalog\\ProductCardSkeleton.tsx":"28","D:\\Project\\client\\src\\Features\\Account\\Register.tsx":"29","D:\\Project\\client\\src\\Features\\Account\\Login.tsx":"30","D:\\Project\\client\\src\\Features\\Account\\AccountSlice.ts":"31","D:\\Project\\client\\src\\App\\Models\\User.ts":"32","D:\\Project\\client\\src\\App\\Layout\\SignedInMenu.tsx":"33","D:\\Project\\client\\src\\App\\Layout\\PrivateRoute.tsx":"34","D:\\Project\\client\\src\\Features\\Checkout\\PaymentForm.tsx":"35","D:\\Project\\client\\src\\Features\\Checkout\\AddressForm.tsx":"36","D:\\Project\\client\\src\\Features\\Checkout\\Review.tsx":"37","D:\\Project\\client\\src\\App\\Components\\AppTextInput.tsx":"38","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutValidation.ts":"39","D:\\Project\\client\\src\\Features\\Basket\\BasketTable.tsx":"40","D:\\Project\\client\\src\\Features\\Orders\\Orders.tsx":"41","D:\\Project\\client\\src\\App\\Models\\Order.ts":"42","D:\\Project\\client\\src\\Features\\Orders\\OrderDetail.tsx":"43","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutWrapper.tsx":"44","D:\\Project\\client\\src\\Features\\Checkout\\StripeInput.tsx":"45","D:\\Project\\client\\src\\Features\\Footer\\footer.tsx":"46"},{"size":952,"mtime":1665384500361,"results":"47","hashOfConfig":"48"},{"size":440,"mtime":1663326605000,"results":"49","hashOfConfig":"48"},{"size":3760,"mtime":1668682470497,"results":"50","hashOfConfig":"48"},{"size":3967,"mtime":1666313128558,"results":"51","hashOfConfig":"48"},{"size":2839,"mtime":1666345857888,"results":"52","hashOfConfig":"48"},{"size":168,"mtime":1663327629000,"results":"53","hashOfConfig":"48"},{"size":4080,"mtime":1665961883777,"results":"54","hashOfConfig":"48"},{"size":182,"mtime":1667864351104,"results":"55","hashOfConfig":"48"},{"size":161,"mtime":1663327649000,"results":"56","hashOfConfig":"48"},{"size":1022,"mtime":1666345805999,"results":"57","hashOfConfig":"48"},{"size":2220,"mtime":1667871901225,"results":"58","hashOfConfig":"48"},{"size":3656,"mtime":1668674630868,"results":"59","hashOfConfig":"48"},{"size":1043,"mtime":1666306163926,"results":"60","hashOfConfig":"48"},{"size":640,"mtime":1664443127144,"results":"61","hashOfConfig":"48"},{"size":650,"mtime":1664444837349,"results":"62","hashOfConfig":"48"},{"size":938,"mtime":1667863886113,"results":"63","hashOfConfig":"48"},{"size":149,"mtime":1664514761947,"results":"64","hashOfConfig":"48"},{"size":1690,"mtime":1668157557016,"results":"65","hashOfConfig":"48"},{"size":6582,"mtime":1668681520272,"results":"66","hashOfConfig":"48"},{"size":780,"mtime":1666308008319,"results":"67","hashOfConfig":"48"},{"size":2742,"mtime":1667173491526,"results":"68","hashOfConfig":"48"},{"size":5255,"mtime":1666079351859,"results":"69","hashOfConfig":"48"},{"size":1019,"mtime":1665961420083,"results":"70","hashOfConfig":"48"},{"size":626,"mtime":1665962906927,"results":"71","hashOfConfig":"48"},{"size":1054,"mtime":1665965934413,"results":"72","hashOfConfig":"48"},{"size":323,"mtime":1666043921228,"results":"73","hashOfConfig":"48"},{"size":1000,"mtime":1666078448884,"results":"74","hashOfConfig":"48"},{"size":1296,"mtime":1666079983859,"results":"75","hashOfConfig":"48"},{"size":4609,"mtime":1667171388265,"results":"76","hashOfConfig":"48"},{"size":3114,"mtime":1667258809521,"results":"77","hashOfConfig":"48"},{"size":2717,"mtime":1667175157687,"results":"78","hashOfConfig":"48"},{"size":64,"mtime":1666307784734,"results":"79","hashOfConfig":"48"},{"size":1372,"mtime":1667867674548,"results":"80","hashOfConfig":"48"},{"size":386,"mtime":1667259022383,"results":"81","hashOfConfig":"48"},{"size":2228,"mtime":1668678277269,"results":"82","hashOfConfig":"48"},{"size":1851,"mtime":1667866372698,"results":"83","hashOfConfig":"48"},{"size":785,"mtime":1667864064624,"results":"84","hashOfConfig":"48"},{"size":541,"mtime":1667369640198,"results":"85","hashOfConfig":"48"},{"size":576,"mtime":1667866389814,"results":"86","hashOfConfig":"48"},{"size":3377,"mtime":1667874884895,"results":"87","hashOfConfig":"48"},{"size":2383,"mtime":1667873628121,"results":"88","hashOfConfig":"48"},{"size":590,"mtime":1667866744738,"results":"89","hashOfConfig":"48"},{"size":3068,"mtime":1668037239048,"results":"90","hashOfConfig":"48"},{"size":1131,"mtime":1668679970332,"results":"91","hashOfConfig":"48"},{"size":615,"mtime":1668678390467,"results":"92","hashOfConfig":"48"},{"size":1749,"mtime":1668682628339,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"1fk7t8b",{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"97"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"97"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"97"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"159","usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"97"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"97"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"97"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"97"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"97"},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Project\\client\\src\\index.tsx",[],[],[],"D:\\Project\\client\\src\\reportWebVitals.ts",[],[],"D:\\Project\\client\\src\\App\\Layout\\App.tsx",[],[],"D:\\Project\\client\\src\\App\\Layout\\Header.tsx",["246","247","248"],[],"import { Margin, ShoppingCart } from \"@mui/icons-material\";\r\nimport { AppBar, Badge, Box, colors, IconButton, List, ListItem, makeStyles, Switch, Toolbar, Typography } from \"@mui/material\";\r\nimport { Container } from \"@mui/system\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../Store/ConfigureStore\";\r\nimport SignedInMenu from \"./SignedInMenu\";\r\n\r\n\r\n\r\ninterface Props {\r\n    darkMode: boolean;\r\n    handleThemeChange: () => void;\r\n}\r\nconst midLinks = [\r\n    { title: 'catalog', path: '/catalog' },\r\n    { title: 'about', path: '/about' },\r\n    { title: 'contact', path: '/contact' }\r\n]\r\nconst rightLinks = [\r\n    { title: 'register', path: '/register' },\r\n    { title: 'login', path: '/login' }\r\n]\r\n\r\nconst navStyle = {\r\n    color: 'White',\r\n    textDecoration: 'none',\r\n    typography: 'h6',\r\n    '&:hover': {\r\n        color: '#FBDA43'\r\n    },\r\n    '&.active': {\r\n        color: '#FBDA43'\r\n    }\r\n}\r\n\r\nexport default function Header({ darkMode, handleThemeChange }: Props) {\r\n\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const { user } = useAppSelector(state => state.account);\r\n\r\n    const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Container maxWidth=\"xl\">\r\n                <Toolbar sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    alignItems: 'center',\r\n                }}>\r\n                    <Box\r\n                        component=\"img\"\r\n                        sx={{\r\n                            height: 70,\r\n                            marginRight: -23\r\n                        }}\r\n                        alt=\"cool-Collection logo\"\r\n                        src=\"../cool.png\"\r\n                    ></Box>\r\n                    <Box sx={{ ml: 2 }}>\r\n                        <Typography variant=\"h6\" component={NavLink}\r\n                            to='/home'\r\n                            end\r\n                            sx={navStyle}>\r\n                            COOL COLLECTIONS\r\n                        </Typography>\r\n                        <Switch checked={darkMode} onChange={handleThemeChange} />\r\n                    </Box>\r\n\r\n                    <List sx={{ display: 'flex' }}>\r\n                        {midLinks.map(({ title, path }) => (\r\n                            <ListItem component={NavLink}\r\n                                to={path}\r\n                                key={path}\r\n                                sx={navStyle}>\r\n                                {title.toUpperCase()}\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Box display='flex' alignItems='center' >\r\n                        <IconButton component={Link} to={`/basket`} size=\"medium\" sx={navStyle}>\r\n                            <Badge badgeContent={itemCount} color='secondary'>\r\n                                <ShoppingCart></ShoppingCart>\r\n                            </Badge>\r\n                        </IconButton>\r\n                        {user ? (\r\n                            <SignedInMenu />\r\n                        ) : (\r\n                            <List sx={{ display: 'flex', color: '#2676CE' }}>\r\n                                {rightLinks.map(({ title, path }) => (\r\n                                    <ListItem component={NavLink}\r\n                                        to={path}\r\n                                        key={path}\r\n                                        sx={navStyle}>\r\n                                        {title.toUpperCase()}\r\n                                    </ListItem>\r\n                                ))}\r\n                            </List>\r\n                        )}\r\n                    </Box>\r\n                </Toolbar>\r\n            </Container>\r\n        </AppBar>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Catalog\\Catalog.tsx",[],[],"D:\\Project\\client\\src\\Features\\Contact\\Contact.tsx",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductDetails.tsx",["249"],[],"import { LoadingButton } from \"@mui/lab\";\r\nimport { Divider, Grid, Table, TableBody, TableCell, TableContainer, TableRow, TextField, Typography } from \"@mui/material\";\r\nimport { useEffect} from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport NotFound from \"../../App/Errors/NotFound\";\r\nimport LoadingComponent from \"../../App/Layout/LoadingComponent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport { addBasketItemAsync } from \"../Basket/BasketSlice\";\r\nimport { fetchProductAsync, productSelectors } from \"./CatalogSlice\";\r\n\r\n\r\n\r\n\r\nexport default function ProductDetails() {\r\n\r\n    const {status} = useAppSelector(state => state.basket);\r\n    const {status:productStatus} = useAppSelector(state => state.catalog)\r\n    const dispatch = useAppDispatch();\r\n    const { id } = useParams<{id: string}>();\r\n    const product = useAppSelector(state => productSelectors.selectById(state, Number(id)));\r\n\r\n    useEffect(() => {\r\n      if(!product) dispatch(fetchProductAsync(Number(id)))\r\n    }, [id, dispatch, product])\r\n\r\n    if (productStatus.includes('pending')) return <LoadingComponent message='Loading Product'/>\r\n    if (!product) return <NotFound/>\r\n\r\n    return (\r\n        <Grid container spacing={6} sx={{mt:10}}>\r\n            <Grid item xs={6}>\r\n                <img src={product.pictureUrl} alt={product.name} style={{ width: '100%' }} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography variant='h3'>{product.name}</Typography>\r\n                <Divider sx={{ mb: 2 }} />\r\n                <Typography variant='h4'>${product.price.toFixed(2)}</Typography>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>{product.name}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>{product.description}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Size</TableCell>\r\n                                <TableCell>{product.size}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Gender</TableCell>\r\n                                <TableCell>{product.gender}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Quantity in Stock</TableCell>\r\n                                <TableCell>{product.quantityInStock}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <Grid container spacing={2} marginTop={2}>\r\n                <Grid item xs={6}>\r\n                    <Link to='/catalog' style={{textDecoration:'none'}}>\r\n                    <LoadingButton sx={{height:'55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant=\"contained\"\r\n                            fullWidth>Go Back</LoadingButton>\r\n                    </Link>                     \r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                            <LoadingButton sx={{height:'55px'}}\r\n                            color='primary'\r\n                            size='large'\r\n                            variant=\"contained\"\r\n                            fullWidth \r\n                            loading={status.includes('pendingAddItem' + product.id)}\r\n                            onClick={() => dispatch(addBasketItemAsync({productId:product.id, quantity:1}))} >Add to Cart</LoadingButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\About\\About.tsx",[],[],"D:\\Project\\client\\src\\Features\\Home\\Home.tsx",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductList.tsx",["250","251","252","253","254"],[],"import { Avatar, Grid, List, ListItem, ListItemAvatar, ListItemText } from \"@mui/material\";\r\nimport { Product } from \"../../App/Models/Product\";\r\nimport { useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport ProductsCard from \"./ProductCard\";\r\nimport ProductCardSkeleton from \"./ProductCardSkeleton\";\r\n\r\ninterface Props {\r\n    products: Product[];\r\n}\r\n\r\nexport default function ProductList({ products }: Props) {\r\n    const { productsLoaded } = useAppSelector(state => state.catalog);\r\n    return (\r\n        <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n            {products.map((product) => {\r\n                return (\r\n                    <Grid item xs={4} sm={4} md={4} sx={{mt:2}} key={product.id}>\r\n                        {!productsLoaded ? (<ProductCardSkeleton />) : (\r\n                            <ProductsCard product={product}></ProductsCard>\r\n                        )}\r\n\r\n                    </Grid>\r\n                );\r\n            })}\r\n        </Grid>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Catalog\\ProductCard.tsx",["255"],[],"import { Avatar, Button, Card, CardActions, CardContent, CardMedia, Typography, CardHeader } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Product } from \"../../App/Models/Product\";\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport { useAppDispatch, useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport { addBasketItemAsync, setBasket } from \"../Basket/BasketSlice\";\r\n\r\ninterface Props {\r\n    product: Product;\r\n}\r\n\r\nexport default function ProductsCard({ product }: Props) {\r\n    const { status } = useAppSelector(state => state.basket)\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader color='#00b1d2'\r\n                avatar={\r\n                    <Avatar sx={{ bgcolor: \"secondary.main\" }}>\r\n                        {product.name.charAt(0).toUpperCase()}\r\n                    </Avatar>\r\n                }\r\n                title={product.name.toUpperCase()}\r\n                titleTypographyProps={{\r\n                    sx: { fontWeight: 'bold', color: 'primary.main' }\r\n                }\r\n                }\r\n            />\r\n            <CardMedia\r\n                component=\"img\"\r\n                image={product.pictureUrl}\r\n                title={product.name}\r\n                alt=\"Photo\"\r\n                sx={{p:2}}\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" color='primary.main'>\r\n                    ${(product.price).toFixed(2)}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {product.size} / {product.gender}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <CardActions>\r\n                    <LoadingButton loading={status.includes('pendingAddItem' + product.id)}\r\n                        onClick={() => dispatch(addBasketItemAsync({ productId: product.id , quantity:1}))}\r\n                        size=\"small\">Add to cart</LoadingButton>\r\n                    <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">View</Button>\r\n                </CardActions>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}","D:\\Project\\client\\src\\App\\Api\\Agent.ts",["256"],[],"import { PaginatedResponse } from './../Models/pagination';\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { request } from 'http';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Store } from '../Store/ConfigureStore';\r\n\r\n\r\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500));\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api/';\r\naxios.defaults.withCredentials = true;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = Store.getState().account.user?.token;\r\n    if(token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    await sleep();\r\n    const pagination = response.headers['pagination'];\r\n    if(pagination) {\r\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination));\r\n       return response; \r\n    }\r\n\r\n    return response\r\n}, (error: AxiosError) => {\r\n    const { data, status } = error.response!;\r\n\r\n    switch (status) {\r\n        case 400:\r\n            if (data.errors) {\r\n                const modelStateErrors: string[] = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modelStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modelStateErrors.flat();\r\n            }\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 500:\r\n            history.push({\r\n                pathname: '/server-error'\r\n            });\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return Promise.reject(error.response);\r\n});\r\n\r\nconst requests = {\r\n    get: (url: string, params?:URLSearchParams) => axios.get(url, {params}).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n    delete: (url: string) => axios.delete(url).then(responseBody),\r\n}\r\n\r\nconst Catalog = {\r\n    list: (params:URLSearchParams) => requests.get('products', params),\r\n    details: (id: number) => requests.get(`products/${id}`),\r\n    fetchFilters:() => requests.get('products/filters')\r\n}\r\n\r\nconst TestErrors = {\r\n    get400Error: () => requests.get('error/bad-request'),\r\n    get401Error: () => requests.get('error/unauthorized'),\r\n    get404Error: () => requests.get('error/not-found'),\r\n    get500Error: () => requests.get('error/server-error'),\r\n    getValidationError: () => requests.get('error/validation-error'),\r\n}\r\n\r\nconst Basket = {\r\n    get: () => requests.get('basket'),\r\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\r\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`),\r\n}\r\n\r\nconst Account = {\r\n    login:(values:any) => requests.post('account/login',values),\r\n    register:(values:any) => requests.post('account/register',values),\r\n    currentUser:() => requests.get('account/getCurrentUser')\r\n}\r\nconst Orders = {\r\n    list:() => requests.get('orders'),\r\n    fetch:(id:number) => requests.get(`orders/${id}`),\r\n    create:(values:any) => requests.post('orders', values)\r\n}\r\n\r\nconst Payment ={\r\n    createPaymentIntent:()=>requests.post('payment',{})\r\n}\r\n\r\nconst Agent = {\r\n    Catalog,\r\n    TestErrors,\r\n    Basket,\r\n    Account,\r\n    Orders,\r\n    Payment\r\n}\r\n\r\nexport default Agent;","D:\\Project\\client\\src\\App\\Errors\\ServerError.tsx",["257","258"],[],"import { Button, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Container } from \"@mui/system\";\r\nimport { Link, Route, useNavigate } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nexport default function ServerError() {\r\n    const { state } = useLocation();\r\n\r\n    return (\r\n        <Container component={Paper} sx={{ marginTop: 2 }}>\r\n            {state?.error ? (\r\n                <>\r\n                    <Typography variant=\"h3\" gutterBottom>This is a server error</Typography>\r\n                    <Divider></Divider>\r\n                    <Typography>{state.error.detail || 'Internal server error'}</Typography>\r\n                </>\r\n            ) : (\r\n                <>\r\n                <Typography variant=\"h3\" color='error' gutterBottom>This is a Server Error</Typography>\r\n                <Divider></Divider>\r\n                </>\r\n            )}\r\n            <Button sx={{fontWeight:'800'}} fullWidth component={Link} to='/catalog'>Go back to Shop</Button>\r\n        </Container>\r\n    )\r\n}","D:\\Project\\client\\src\\App\\Errors\\NotFound.tsx",["259"],[],"import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\nreturn(\r\n    <Container component={Paper} sx={{marginTop:2, display:'flex-box',textAlign:'center'}}>\r\n        <Typography gutterBottom variant=\"h3\" color=\"#E8AC67\" marginTop='30px' paddingTop=\"30px\">\r\n            Oops We could not found what you are looking for!</Typography>\r\n        <img src=\"../notfound.png\"></img>\r\n        <Divider></Divider>\r\n        <Button sx={{fontWeight:'800'}} fullWidth component={Link} to='/catalog'>Go back to Shop</Button>\r\n    </Container>\r\n)\r\n}","D:\\Project\\client\\src\\App\\Layout\\LoadingComponent.tsx",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketPage.tsx",[],[],"D:\\Project\\client\\src\\App\\Util\\Util.ts",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketSummary.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\CheckoutPage.tsx",["260","261","262"],[],"import { Box, Button, Paper, Step, StepLabel, Stepper, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport Review from \"./Review\";\r\nimport { FieldValues, FormProvider, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { validationFunction } from \"./CheckoutValidation\";\r\nimport Agent from \"../../App/Api/Agent\";\r\nimport { useAppDispatch, useAppSelector } from \"../../App/Store/ConfigureStore\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { clearBasket } from \"../Basket/BasketSlice\";\r\nimport { CardNumberElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\r\nimport { Link } from \"react-router-dom\";\r\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\r\n\r\nfunction getStepContent(step: number) {\r\n    switch (step) {\r\n        case 0:\r\n            return <AddressForm />;\r\n        case 1:\r\n            return <Review />;\r\n        case 2:\r\n            return <PaymentForm />;\r\n        default:\r\n            throw new Error('Unknown step');\r\n    }\r\n}\r\n\r\n\r\nexport default function CheckoutPage() {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [orderNumber, setOrderNumber] = useState(0);\r\n    const { basket } = useAppSelector(state => state.basket);\r\n    const [loading, setLoading] = useState(false);\r\n    const dispatch = useAppDispatch();\r\n    const [paymentMessage, setPaymentMessage] = useState('');\r\n    const [paymentSucceeded, setPaymentSucceeded] = useState(false);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const currentPageValidation = validationFunction[activeStep];\r\n    const methods = useForm({\r\n        mode: 'all',\r\n        resolver: yupResolver(currentPageValidation)\r\n    });\r\n\r\n    async function submitOrder(data: FieldValues) {\r\n        setLoading(true);\r\n        const { nameOnCard, saveAddress, ...shippingAddress } = data;\r\n        if (!stripe || !elements) return;//stripe is not ready\r\n\r\n        try {\r\n            const cardElement = elements.getElement(CardNumberElement);\r\n            const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\r\n                payment_method: {\r\n                    card: cardElement!,\r\n                    billing_details: {\r\n                        name: nameOnCard\r\n                    }\r\n                }\r\n            });\r\n            if (paymentResult.paymentIntent?.status === 'succeeded') {\r\n                const orderNumber = await Agent.Orders.create({ saveAddress, shippingAddress })\r\n                setOrderNumber(orderNumber);\r\n                setPaymentSucceeded(true);\r\n                setPaymentMessage('Thank you -  We have received your payment');\r\n                setActiveStep(activeStep + 1);\r\n                dispatch(clearBasket());\r\n                setLoading(false);\r\n            } else {\r\n                setPaymentMessage(paymentResult.error?.message!);\r\n                setPaymentSucceeded(false);\r\n                setLoading(false);\r\n                setActiveStep(activeStep + 1);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    const handleNext = async (data: FieldValues) => {\r\n        if (activeStep === steps.length - 1) {\r\n            await submitOrder(data);\r\n        }\r\n        else {\r\n            setActiveStep(activeStep + 1);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    return (\r\n        <FormProvider {...methods}>\r\n            <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\r\n                <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                    Checkout\r\n                </Typography>\r\n                <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\r\n                    {steps.map((label) => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <>\r\n                    {activeStep === steps.length ? (\r\n                        <>\r\n                            <Typography variant=\"h5\" gutterBottom>\r\n                                {paymentMessage}\r\n                            </Typography>\r\n                            {paymentSucceeded ? (\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #{orderNumber}. We have not emailed your order\r\n                                    confirmation, and will not send you an update when your order has\r\n                                    shipped as this is a Student Project!\r\n                                    <br></br>\r\n                                    To Check Stripe Payments. Click Below\r\n                                    <br></br>\r\n                                    <a href={'https://dashboard.stripe.com/test/payments'} target={'_blank'}>Click here</a>\r\n                                </Typography>\r\n                                \r\n                            ):(\r\n                                <Button variant=\"contained\" onClick={handleBack}>\r\n                                    Go Back and Try Again\r\n                                </Button>\r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        <form onSubmit={methods.handleSubmit(handleNext)}>\r\n                            {getStepContent(activeStep)}\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\r\n                                {activeStep !== 0 && (\r\n                                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\r\n                                        Back\r\n                                    </Button>\r\n                                )}\r\n                                <LoadingButton\r\n                                    variant=\"contained\"\r\n                                    type=\"submit\"\r\n                                    sx={{ mt: 3, ml: 1 }}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                </LoadingButton>\r\n                            </Box>\r\n                        </form>\r\n                    )}\r\n                </>\r\n            </Paper>\r\n        </FormProvider>\r\n    );\r\n}\r\n\r\n","D:\\Project\\client\\src\\App\\Store\\ConfigureStore.ts",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketSlice.ts",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\CatalogSlice.ts",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductSearch.tsx",[],[],"D:\\Project\\client\\src\\App\\Components\\RadioButtonGroup.tsx",[],[],"D:\\Project\\client\\src\\App\\Components\\CheckBoxButtons.tsx",[],[],"D:\\Project\\client\\src\\App\\Models\\pagination.ts",[],[],"D:\\Project\\client\\src\\App\\Components\\AppPagination.tsx",[],[],"D:\\Project\\client\\src\\Features\\Catalog\\ProductCardSkeleton.tsx",[],[],"D:\\Project\\client\\src\\Features\\Account\\Register.tsx",["263","264"],[],"import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Alert, AlertTitle, List, ListItem, ListItemText, Paper } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport Agent from '../../App/Api/Agent';\r\nimport { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\n\r\n\r\n\r\n\r\nexport default function Register() {\r\n\r\n    const { register, handleSubmit, formState: { isSubmitting, errors } } = useForm()\r\n    const [validationError, setValidationError] = useState([]);\r\n    return (\r\n        <Container component={Paper} maxWidth=\"sm\"\r\n            sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4, mt: 2 }}>\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                Register\r\n            </Typography>\r\n            <Box component=\"form\" onSubmit={handleSubmit((data) =>\r\n                Agent.Account.register(data)\r\n                .then(() => {\r\n                    toast.success('Registration Successful. Please Login');\r\n                    history.push('/login')\r\n                })\r\n                .catch(error => setValidationError(error)))} noValidate sx={{ mt: 1 }}>\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Username\"\r\n                    autoComplete=\"name\"\r\n                    autoFocus\r\n                    {...register('username', { required: 'Username is required' })}\r\n                    error={!!errors.username}\r\n                    helperText={errors?.username?.message?.toString()}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Email Address\"\r\n                    autoComplete=\"email\"\r\n                    {...register('email', \r\n                    { required: 'Email is required',\r\n                      pattern:{\r\n                        value:/^\\w+[\\w-\\.]*\\@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\r\n                        message:\"Not a valid email address\"\r\n                    }})}\r\n                    error={!!errors.email}\r\n                    helperText={errors?.email?.message?.toString()}\r\n                />\r\n                <TextField\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    {...register('password', { required: 'Password is required' })}\r\n                    error={!!errors.password}\r\n                    helperText={errors?.password?.message?.toString()}\r\n                />\r\n                {validationError.length > 0 &&\r\n                    <Alert severity=\"error\">\r\n                        <AlertTitle>Validation Error</AlertTitle>\r\n                        <List>\r\n                            {validationError.map(error => (\r\n                                <ListItem key={error}>\r\n                                    <ListItemText>\r\n                                        {error}\r\n                                    </ListItemText>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    </Alert>\r\n                }\r\n                <LoadingButton\r\n                    loading={isSubmitting}\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    sx={{ mt: 3, mb: 2 }}\r\n                >\r\n                    Register\r\n                </LoadingButton>\r\n                <Grid container>\r\n                    <Grid item xs>\r\n                        <Link to=\"/register\">\r\n                            Forgot password?\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link to=\"/login\">\r\n                            {\"Already have an account? Sign In\"}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","D:\\Project\\client\\src\\Features\\Account\\Login.tsx",["265"],[],"import Avatar from '@mui/material/Avatar';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { Paper } from '@mui/material';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport { FieldValues, useForm } from 'react-hook-form';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { signInUser } from './AccountSlice';\r\nimport { useAppDispatch } from '../../App/Store/ConfigureStore';\r\nimport { history } from '../..';\r\nimport { useMemo } from 'react';\r\n\r\n\r\n\r\n\r\nexport default function Login() {\r\n\r\n  const dispatch = useAppDispatch();\r\n  const { register, handleSubmit, formState: { isSubmitting, errors } } = useForm();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const from = useMemo(() => {\r\n    const state = location.state as { from: Location };\r\n    if (state && state.from && state.from.pathname) {\r\n      return state.from?.pathname;\r\n    }\r\n    return null;\r\n  }, [location]);\r\n\r\n  async function submitForm(data: FieldValues) {\r\n    try {\r\n      await dispatch(signInUser(data));\r\n      navigate(from || '/catalog');\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container component={Paper} maxWidth=\"sm\"\r\n      sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4, mt: 2 }}>\r\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Sign in\r\n      </Typography>\r\n      <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Username\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          {...register('username', { required: 'Username is required' })}\r\n          error={!!errors.username}\r\n          helperText={errors?.username?.message?.toString()}\r\n        />\r\n        <TextField\r\n          margin=\"normal\"\r\n          fullWidth\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          {...register('password', { required: 'Password is required' })}\r\n          error={!!errors.password}\r\n          helperText={errors?.password?.message?.toString()}\r\n        />\r\n        <LoadingButton\r\n\r\n          loading={isSubmitting}\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          sx={{ mt: 3, mb: 2 }}\r\n        >\r\n          Sign In\r\n        </LoadingButton>\r\n        <Grid container>\r\n          <Grid item xs>\r\n            <Link to=\"/register\">\r\n              Forgot password?\r\n            </Link>\r\n          </Grid>\r\n          <Grid item>\r\n            <Link to=\"/register\">\r\n              {\"Don't have an account? Sign Up\"}\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","D:\\Project\\client\\src\\Features\\Account\\AccountSlice.ts",[],[],"D:\\Project\\client\\src\\App\\Models\\User.ts",[],[],"D:\\Project\\client\\src\\App\\Layout\\SignedInMenu.tsx",[],[],"D:\\Project\\client\\src\\App\\Layout\\PrivateRoute.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\PaymentForm.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\AddressForm.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\Review.tsx",["266","267"],[],"import { Grid, Button } from '@mui/material';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAppSelector } from '../../App/Store/ConfigureStore';\r\nimport BasketSummary from '../Basket/BasketSummary';\r\nimport BasketTable from '../Basket/BasketTable';\r\n\r\n\r\nexport default function Review() {\r\n  \r\n  const { basket } = useAppSelector(state => state.basket);\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      {basket &&\r\n      <BasketTable items={basket.items} isBasket={false}/>}\r\n      <Grid container>\r\n        <Grid item xs={6}/>\r\n        <Grid item xs={6}>        \r\n          <BasketSummary></BasketSummary>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","D:\\Project\\client\\src\\App\\Components\\AppTextInput.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\CheckoutValidation.ts",[],[],"D:\\Project\\client\\src\\Features\\Basket\\BasketTable.tsx",[],[],"D:\\Project\\client\\src\\Features\\Orders\\Orders.tsx",["268","269","270"],[],"import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\r\nimport { Component, useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Agent from \"../../App/Api/Agent\";\r\nimport LoadingComponent from \"../../App/Layout/LoadingComponent\";\r\nimport { Order } from \"../../App/Models/Order\";\r\n\r\n\r\nexport default function Orders() {\r\n\r\n    const [orders, setOrders] = useState<Order[] | null> (null);\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        Agent.Orders.list()\r\n        .then(orders => setOrders(orders))\r\n        .catch(err => console.log(err))\r\n        .finally(() => setLoading(false))\r\n    }, [])\r\n    \r\n  const navigate = useNavigate();\r\n\r\n  const toOrderDetail=(id:number)=>{\r\n  navigate('./OrderDetail',{state:{id}});\r\n  }\r\n\r\n    if(loading) return <LoadingComponent message=\"Loading Your Orders...\"/>\r\n    return(\r\n        <TableContainer component={Paper} sx={{marginTop:2}}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Order Number</TableCell>\r\n              <TableCell align=\"right\">Total</TableCell>\r\n              <TableCell align=\"right\">Order Date</TableCell>\r\n              <TableCell align=\"right\">Order Status</TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders?.map((order) => (\r\n              <TableRow\r\n                key={order.id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {order.id}\r\n                </TableCell>\r\n                <TableCell align=\"right\">${order.total.toFixed(2)}</TableCell>\r\n                <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\r\n                <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                <TableCell align=\"right\">\r\n                <Button component={Link} to={`/orderDetail/${order.id}`} size=\"small\">View</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n}","D:\\Project\\client\\src\\App\\Models\\Order.ts",[],[],"D:\\Project\\client\\src\\Features\\Orders\\OrderDetail.tsx",["271","272","273","274","275"],[],"import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button, Typography, Box, Avatar, Grid } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\"\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport Agent from \"../../App/Api/Agent\"\r\nimport LoadingComponent from \"../../App/Layout/LoadingComponent\";\r\nimport { Order } from \"../../App/Models/Order\";\r\n\r\n\r\n\r\nexport default function OrderDetail() {\r\n\r\n    const [order, setOrder] = useState<Order | null>();\r\n    const [loading, setLoading] = useState(true);\r\n    const { id } = useParams<{ id: string }>();\r\n\r\n    useEffect(() => {\r\n        Agent.Orders.fetch(Number(id))\r\n            .then(order => setOrder(order))\r\n            .catch(err => console.log(err))\r\n            .finally(() => setLoading(false))\r\n    }, [id])\r\n    \r\n    return (\r\n        <>\r\n        \r\n            <Box display='flex' justifyContent='space-between'>\r\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>#Order {order?.id} - {order?.orderStatus}</Typography>\r\n                <Button sx={{ m: 2 }} size='large' variant=\"contained\"\r\n                    component={Link} to={'/Order'}\r\n                >Back to Orders</Button>\r\n            </Box>\r\n            <TableContainer component={Paper} sx={{ marginTop: 2 }}>\r\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Product Name</TableCell>\r\n                            <TableCell align=\"right\">Image</TableCell>\r\n                            <TableCell align=\"right\">Price</TableCell>\r\n                            <TableCell align=\"right\">Quantity</TableCell>\r\n                            <TableCell align=\"right\">Subtotal</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {order?.orderItemsDto.map((order) => (\r\n                            <TableRow\r\n                                key={order.productId}\r\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            >\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {order.productName}\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <img src={order.pictureUrl} style={{ height: 50, marginRight: 20 }}></img>\r\n                                </TableCell>\r\n                                <TableCell align=\"right\">${order.price.toFixed(2)}</TableCell>\r\n                                <TableCell align=\"right\">{order.quantity}</TableCell>\r\n                                <TableCell align=\"right\">${(order.price * order.quantity).toFixed(2)}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}","D:\\Project\\client\\src\\Features\\Checkout\\CheckoutWrapper.tsx",[],[],"D:\\Project\\client\\src\\Features\\Checkout\\StripeInput.tsx",[],[],"D:\\Project\\client\\src\\Features\\Footer\\footer.tsx",[],[],{"ruleId":"276","severity":1,"message":"277","line":1,"column":10,"nodeType":"278","messageId":"279","endLine":1,"endColumn":16},{"ruleId":"276","severity":1,"message":"280","line":2,"column":30,"nodeType":"278","messageId":"279","endLine":2,"endColumn":36},{"ruleId":"276","severity":1,"message":"281","line":2,"column":66,"nodeType":"278","messageId":"279","endLine":2,"endColumn":76},{"ruleId":"276","severity":1,"message":"282","line":2,"column":80,"nodeType":"278","messageId":"279","endLine":2,"endColumn":89},{"ruleId":"276","severity":1,"message":"283","line":1,"column":10,"nodeType":"278","messageId":"279","endLine":1,"endColumn":16},{"ruleId":"276","severity":1,"message":"284","line":1,"column":24,"nodeType":"278","messageId":"279","endLine":1,"endColumn":28},{"ruleId":"276","severity":1,"message":"285","line":1,"column":30,"nodeType":"278","messageId":"279","endLine":1,"endColumn":38},{"ruleId":"276","severity":1,"message":"286","line":1,"column":40,"nodeType":"278","messageId":"279","endLine":1,"endColumn":54},{"ruleId":"276","severity":1,"message":"287","line":1,"column":56,"nodeType":"278","messageId":"279","endLine":1,"endColumn":68},{"ruleId":"276","severity":1,"message":"288","line":6,"column":30,"nodeType":"278","messageId":"279","endLine":6,"endColumn":39},{"ruleId":"276","severity":1,"message":"289","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":17},{"ruleId":"276","severity":1,"message":"290","line":3,"column":16,"nodeType":"278","messageId":"279","endLine":3,"endColumn":21},{"ruleId":"276","severity":1,"message":"291","line":3,"column":23,"nodeType":"278","messageId":"279","endLine":3,"endColumn":34},{"ruleId":"292","severity":1,"message":"293","line":9,"column":9,"nodeType":"294","endLine":9,"endColumn":36},{"ruleId":"276","severity":1,"message":"295","line":14,"column":10,"nodeType":"278","messageId":"279","endLine":14,"endColumn":14},{"ruleId":"276","severity":1,"message":"296","line":35,"column":12,"nodeType":"278","messageId":"279","endLine":35,"endColumn":19},{"ruleId":"297","severity":1,"message":"298","line":123,"column":37,"nodeType":"294","messageId":"299","endLine":123,"endColumn":110,"fix":"300"},{"ruleId":"301","severity":1,"message":"302","line":58,"column":40,"nodeType":"303","messageId":"304","endLine":58,"endColumn":41,"suggestions":"305"},{"ruleId":"301","severity":1,"message":"306","line":58,"column":44,"nodeType":"303","messageId":"304","endLine":58,"endColumn":45,"suggestions":"307"},{"ruleId":"276","severity":1,"message":"308","line":14,"column":10,"nodeType":"278","messageId":"279","endLine":14,"endColumn":17},{"ruleId":"276","severity":1,"message":"309","line":1,"column":16,"nodeType":"278","messageId":"279","endLine":1,"endColumn":22},{"ruleId":"276","severity":1,"message":"295","line":3,"column":10,"nodeType":"278","messageId":"279","endLine":3,"endColumn":14},{"ruleId":"276","severity":1,"message":"310","line":2,"column":10,"nodeType":"278","messageId":"279","endLine":2,"endColumn":19},{"ruleId":"276","severity":1,"message":"311","line":4,"column":10,"nodeType":"278","messageId":"279","endLine":4,"endColumn":17},{"ruleId":"276","severity":1,"message":"312","line":24,"column":9,"nodeType":"278","messageId":"279","endLine":24,"endColumn":22},{"ruleId":"276","severity":1,"message":"283","line":1,"column":108,"nodeType":"278","messageId":"279","endLine":1,"endColumn":114},{"ruleId":"276","severity":1,"message":"313","line":1,"column":116,"nodeType":"278","messageId":"279","endLine":1,"endColumn":120},{"ruleId":"276","severity":1,"message":"314","line":5,"column":8,"nodeType":"278","messageId":"279","endLine":5,"endColumn":24},{"ruleId":"276","severity":1,"message":"296","line":13,"column":12,"nodeType":"278","messageId":"279","endLine":13,"endColumn":19},{"ruleId":"292","severity":1,"message":"293","line":53,"column":37,"nodeType":"294","endLine":53,"endColumn":105},"@typescript-eslint/no-unused-vars","'Margin' is defined but never used.","Identifier","unusedVar","'colors' is defined but never used.","'makeStyles' is defined but never used.","'TextField' is defined but never used.","'Avatar' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemAvatar' is defined but never used.","'ListItemText' is defined but never used.","'setBasket' is defined but never used.","'request' is defined but never used.","'Route' is defined but never used.","'useNavigate' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'loading' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"315","text":"316"},"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["317","318"],"Unnecessary escape character: \\@.",["319","320"],"'history' is defined but never used.","'Button' is defined but never used.","'Component' is defined but never used.","'NavLink' is defined but never used.","'toOrderDetail' is assigned a value but never used.","'Grid' is defined but never used.","'LoadingComponent' is defined but never used.",[5112,5112]," rel=\"noreferrer\"",{"messageId":"321","fix":"322","desc":"323"},{"messageId":"324","fix":"325","desc":"326"},{"messageId":"321","fix":"327","desc":"323"},{"messageId":"324","fix":"328","desc":"326"},"removeEscape",{"range":"329","text":"330"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"331","text":"332"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"333","text":"330"},{"range":"334","text":"332"},[2462,2463],"",[2462,2462],"\\",[2466,2467],[2466,2466]]