{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\client\\\\src\\\\App\\\\Components\\\\AppPagination.tsx\";\nimport { Box, Pagination, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppPagination(_ref) {\n  let {\n    pageData,\n    onPageChange\n  } = _ref;\n  const {\n    currentPage,\n    totalCount,\n    totalPages,\n    pageSize\n  } = pageData;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Displaying \", (currentPage - 1) * pageSize + 1, \" -\", currentPage * pageSize > totalCount ? totalCount : currentPage * pageSize, \" of \", pageData === null || pageData === void 0 ? void 0 : pageData.totalCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      count: totalPages,\n      color: \"primary\",\n      size: \"large\",\n      page: currentPage,\n      onChange: (e, page) => onPageChange(page)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = AppPagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppPagination\");","map":{"version":3,"names":["Box","Pagination","Typography","AppPagination","pageData","onPageChange","currentPage","totalCount","totalPages","pageSize","e","page"],"sources":["D:/Project/client/src/App/Components/AppPagination.tsx"],"sourcesContent":["import { Box, Pagination, Typography } from \"@mui/material\";\r\nimport { PageData } from \"../Models/pagination\";\r\n\r\ninterface Props{\r\n    pageData:PageData;\r\n    onPageChange:(page:number) => void;\r\n    \r\n}\r\n\r\nexport default function AppPagination({pageData, onPageChange}:Props) {\r\n\r\n    const {currentPage, totalCount, totalPages, pageSize} = pageData;\r\n\r\n    return (\r\n        <Box display='flex' justifyContent='space-between' alignItems='center'>\r\n        <Typography>\r\n          Displaying {(currentPage - 1)*pageSize + 1} -\r\n          {currentPage*pageSize > totalCount \r\n          ? totalCount\r\n          :currentPage*pageSize} of {pageData?.totalCount}\r\n        </Typography>\r\n        <Pagination\r\n          count={totalPages}\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          page={currentPage}\r\n          onChange={(e, page) => onPageChange(page)}\r\n        />\r\n      </Box>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,QAA4C,eAA5C;;AASA,eAAe,SAASC,aAAT,OAAuD;EAAA,IAAhC;IAACC,QAAD;IAAWC;EAAX,CAAgC;EAElE,MAAM;IAACC,WAAD;IAAcC,UAAd;IAA0BC,UAA1B;IAAsCC;EAAtC,IAAkDL,QAAxD;EAEA,oBACI,QAAC,GAAD;IAAK,OAAO,EAAC,MAAb;IAAoB,cAAc,EAAC,eAAnC;IAAmD,UAAU,EAAC,QAA9D;IAAA,wBACA,QAAC,UAAD;MAAA,0BACc,CAACE,WAAW,GAAG,CAAf,IAAkBG,QAAlB,GAA6B,CAD3C,QAEGH,WAAW,GAACG,QAAZ,GAAuBF,UAAvB,GACCA,UADD,GAEAD,WAAW,GAACG,QAJf,UAI6BL,QAJ7B,aAI6BA,QAJ7B,uBAI6BA,QAAQ,CAAEG,UAJvC;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAOA,QAAC,UAAD;MACE,KAAK,EAAEC,UADT;MAEE,KAAK,EAAC,SAFR;MAGE,IAAI,EAAC,OAHP;MAIE,IAAI,EAAEF,WAJR;MAKE,QAAQ,EAAE,CAACI,CAAD,EAAIC,IAAJ,KAAaN,YAAY,CAACM,IAAD;IALrC;MAAA;MAAA;MAAA;IAAA,QAPA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;KArBuBR,a"},"metadata":{},"sourceType":"module"}