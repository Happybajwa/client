{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\client\\\\src\\\\App\\\\Components\\\\AppDropzone.tsx\",\n    _s = $RefreshSig$();\n\nimport { UploadFile } from '@mui/icons-material';\nimport { FormControl, Typography } from '@mui/material';\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useController } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppDropzone(props) {\n  _s();\n\n  const {\n    fieldState,\n    field\n  } = useController({ ...props,\n    defaultValue: null\n  });\n  const dzStyle = {\n    display: 'flex',\n    border: 'dashed 3px #eee',\n    borderColor: \"#eee\",\n    borderRadius: '5px',\n    paddingTop: '30px',\n    alignItems: 'center',\n    height: 200,\n    width: 500\n  };\n  const dzActive = {\n    borderColor: 'green'\n  }; //uploading image\n\n  const onDrop = useCallback(acceptedFile => {\n    acceptedFile[0] = Object.assign(acceptedFile[0], {\n      preview: URL.createObjectURL(acceptedFile[0])\n    });\n    field.onChange(acceptedFile[0]);\n  }, [field]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n    children: /*#__PURE__*/_jsxDEV(FormControl, {\n      style: isDragActive ? { ...dzStyle,\n        ...dzActive\n      } : dzStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UploadFile, {\n        sx: {\n          fontSize: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        varient: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppDropzone, \"nheVzVs5g4hF/PxNzCN7kLd4YlA=\", false, function () {\n  return [useController, useDropzone];\n});\n\n_c = AppDropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppDropzone\");","map":{"version":3,"names":["UploadFile","FormControl","Typography","React","useCallback","useDropzone","useController","AppDropzone","props","fieldState","field","defaultValue","dzStyle","display","border","borderColor","borderRadius","paddingTop","alignItems","height","width","dzActive","onDrop","acceptedFile","Object","assign","preview","URL","createObjectURL","onChange","getRootProps","getInputProps","isDragActive","fontSize"],"sources":["D:/Project/client/src/App/Components/AppDropzone.tsx"],"sourcesContent":["import { UploadFile } from '@mui/icons-material';\r\nimport { FormControl, Typography, useControlled } from '@mui/material'\r\nimport React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { useController, UseControllerProps } from 'react-hook-form'\r\n\r\ninterface Props extends UseControllerProps {\r\n\r\n}\r\n\r\nexport default function AppDropzone(props: Props) {\r\n\r\n    const { fieldState, field } = useController({ ...props, defaultValue: null });\r\n\r\n    const dzStyle = {\r\n        display:'flex',\r\n        border:'dashed 3px #eee',\r\n        borderColor:\"#eee\",\r\n        borderRadius:'5px',\r\n        paddingTop:'30px',\r\n        alignItems:'center',\r\n        height:200,\r\n        width:500\r\n    }\r\n\r\n    const dzActive = {\r\n        borderColor:'green'\r\n    }\r\n\r\n    //uploading image\r\n    const onDrop = useCallback((acceptedFile:any) => {\r\n        acceptedFile[0] = Object.assign(acceptedFile[0],\r\n            { preview: URL.createObjectURL(acceptedFile[0]) });\r\n        field.onChange(acceptedFile[0]);\r\n    }, [field])\r\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n    return (\r\n        <div {...getRootProps()}>\r\n           <FormControl style={isDragActive ? {...dzStyle, ...dzActive}: dzStyle}>\r\n                <input {...getInputProps()}/>\r\n                <UploadFile sx={{fontSize:'100px'}}/>\r\n                <Typography varient/>\r\n           </FormControl>\r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,qBAA3B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAuD,eAAvD;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,aAAT,QAAkD,iBAAlD;;AAMA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAAmC;EAAA;;EAE9C,MAAM;IAAEC,UAAF;IAAcC;EAAd,IAAwBJ,aAAa,CAAC,EAAE,GAAGE,KAAL;IAAYG,YAAY,EAAE;EAA1B,CAAD,CAA3C;EAEA,MAAMC,OAAO,GAAG;IACZC,OAAO,EAAC,MADI;IAEZC,MAAM,EAAC,iBAFK;IAGZC,WAAW,EAAC,MAHA;IAIZC,YAAY,EAAC,KAJD;IAKZC,UAAU,EAAC,MALC;IAMZC,UAAU,EAAC,QANC;IAOZC,MAAM,EAAC,GAPK;IAQZC,KAAK,EAAC;EARM,CAAhB;EAWA,MAAMC,QAAQ,GAAG;IACbN,WAAW,EAAC;EADC,CAAjB,CAf8C,CAmB9C;;EACA,MAAMO,MAAM,GAAGlB,WAAW,CAAEmB,YAAD,IAAsB;IAC7CA,YAAY,CAAC,CAAD,CAAZ,GAAkBC,MAAM,CAACC,MAAP,CAAcF,YAAY,CAAC,CAAD,CAA1B,EACd;MAAEG,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,YAAY,CAAC,CAAD,CAAhC;IAAX,CADc,CAAlB;IAEAb,KAAK,CAACmB,QAAN,CAAeN,YAAY,CAAC,CAAD,CAA3B;EACH,CAJyB,EAIvB,CAACb,KAAD,CAJuB,CAA1B;EAKA,MAAM;IAAEoB,YAAF;IAAgBC,aAAhB;IAA+BC;EAA/B,IAAgD3B,WAAW,CAAC;IAAEiB;EAAF,CAAD,CAAjE;EAEA,oBACI,oBAASQ,YAAY,EAArB;IAAA,uBACG,QAAC,WAAD;MAAa,KAAK,EAAEE,YAAY,GAAG,EAAC,GAAGpB,OAAJ;QAAa,GAAGS;MAAhB,CAAH,GAA8BT,OAA9D;MAAA,wBACK,sBAAWmB,aAAa;MAAxB;QAAA;QAAA;QAAA;MAAA,QADL,eAEK,QAAC,UAAD;QAAY,EAAE,EAAE;UAACE,QAAQ,EAAC;QAAV;MAAhB;QAAA;QAAA;QAAA;MAAA,QAFL,eAGK,QAAC,UAAD;QAAY,OAAO;MAAnB;QAAA;QAAA;QAAA;MAAA,QAHL;IAAA;MAAA;MAAA;MAAA;IAAA;EADH;IAAA;IAAA;IAAA;EAAA,QADJ;AASH;;GApCuB1B,W;UAEUD,a,EAuBwBD,W;;;KAzBlCE,W"},"metadata":{},"sourceType":"module"}