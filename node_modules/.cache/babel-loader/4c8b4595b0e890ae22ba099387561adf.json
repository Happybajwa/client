{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLocation } from \"react-router-dom\";\nimport { useAppSelector } from \"../Store/ConfigureStore\";\nexport const PrivateRoute = _ref => {\n  _s();\n\n  let {\n    roles\n  } = _ref;\n  const location = useLocation();\n  const {\n    user\n  } = useAppSelector(state => state.account); // return\n  // !user ? (\n  //   <Navigate replace to={\"/login\"} state={{ from: location }} />\n  // ) : (\n  //   <Outlet />\n  // );\n};\n\n_s(PrivateRoute, \"IG5QnsKtdhBIbAnZbjBW2h3ZVbg=\", false, function () {\n  return [useLocation, useAppSelector];\n});\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["useLocation","useAppSelector","PrivateRoute","roles","location","user","state","account"],"sources":["D:/Project/client/src/App/Layout/PrivateRoute.tsx"],"sourcesContent":["import { Navigate, Outlet, RouteProps, useLocation } from \"react-router-dom\";\r\nimport { useAppSelector } from \"../Store/ConfigureStore\";\r\n \r\n\r\ninterface Props extends RouteProps\r\n{\r\n  roles?:string[];\r\n}\r\n\r\nexport const PrivateRoute = ({roles}:Props) => {\r\n\r\n  const location = useLocation();\r\n  const { user } = useAppSelector((state) => state.account);\r\n \r\n  // return\r\n  // !user ? (\r\n  //   <Navigate replace to={\"/login\"} state={{ from: location }} />\r\n  // ) : (\r\n  //   <Outlet />\r\n  // );\r\n};"],"mappings":";;AAAA,SAAuCA,WAAvC,QAA0D,kBAA1D;AACA,SAASC,cAAT,QAA+B,yBAA/B;AAQA,OAAO,MAAMC,YAAY,GAAG,QAAmB;EAAA;;EAAA,IAAlB;IAACC;EAAD,CAAkB;EAE7C,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAM;IAAEK;EAAF,IAAWJ,cAAc,CAAEK,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA/B,CAH6C,CAK7C;EACA;EACA;EACA;EACA;EACA;AACD,CAXM;;GAAML,Y;UAEMF,W,EACAC,c;;;KAHNC,Y"},"metadata":{},"sourceType":"module"}