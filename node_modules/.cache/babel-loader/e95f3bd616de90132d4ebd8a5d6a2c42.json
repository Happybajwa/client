{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\client\\\\src\\\\Features\\\\Orders\\\\Orders.tsx\",\n    _s = $RefreshSig$();\n\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport Agent from \"../../App/Api/Agent\";\nimport LoadingComponent from \"../../App/Layout/LoadingComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Orders() {\n  _s();\n\n  const [orders, setOrders] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    Agent.Orders.list().then(orders => setOrders(orders)).catch(err => console.log(err)).finally(() => setLoading(false));\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(LoadingComponent, {\n    message: \"Loading Your Orders...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Order Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Order Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Order Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: orders === null || orders === void 0 ? void 0 : orders.map(order => /*#__PURE__*/_jsxDEV(TableRow, {\n          sx: {\n            '&:last-child td, &:last-child th': {\n              border: 0\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: order.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: [\"$\", order.total.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: order.orderDate.s\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: order.orderStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this)]\n        }, order.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Orders, \"xQZaP0F3Q/8DljneW91SRawoyXk=\");\n\n_c = Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","Button","useEffect","useState","Agent","LoadingComponent","Orders","orders","setOrders","loading","setLoading","list","then","catch","err","console","log","finally","minWidth","map","order","border","id","total","toFixed","orderDate","s","orderStatus"],"sources":["D:/Project/client/src/Features/Orders/Orders.tsx"],"sourcesContent":["import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Agent from \"../../App/Api/Agent\";\r\nimport LoadingComponent from \"../../App/Layout/LoadingComponent\";\r\nimport { Order } from \"../../App/Models/Order\";\r\n\r\n\r\nexport default function Orders() {\r\n\r\n    const [orders, setOrders] = useState<Order[] | null> (null);\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    useEffect(() => {\r\n        Agent.Orders.list()\r\n        .then(orders => setOrders(orders))\r\n        .catch(err => console.log(err))\r\n        .finally(() => setLoading(false))\r\n    }, [])\r\n\r\n    if(loading) return <LoadingComponent message=\"Loading Your Orders...\"/>\r\n    return(\r\n        <TableContainer component={Paper}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Order Number</TableCell>\r\n              <TableCell align=\"right\">Total</TableCell>\r\n              <TableCell align=\"right\">Order Date</TableCell>\r\n              <TableCell align=\"right\">Order Status</TableCell>\r\n              <TableCell align=\"right\"></TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders?.map((order) => (\r\n              <TableRow\r\n                key={order.id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {order.id}\r\n                </TableCell>\r\n                <TableCell align=\"right\">${order.total.toFixed(2)}</TableCell>\r\n                <TableCell align=\"right\">{order.orderDate.s}</TableCell>\r\n                <TableCell align=\"right\">{order.orderStatus}</TableCell>\r\n                <TableCell align=\"right\">\r\n                    <Button>View</Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}