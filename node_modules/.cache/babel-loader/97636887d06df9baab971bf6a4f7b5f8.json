{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\client\\\\src\\\\App\\\\Layout\\\\PrivateRoute.tsx\",\n    _s = $RefreshSig$();\n\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useAppSelector } from \"../Store/ConfigureStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PrivateRoute = _ref => {\n  _s();\n\n  var _role;\n\n  let {\n    roles\n  } = _ref;\n  const location = useLocation();\n  const {\n    user\n  } = useAppSelector(state => state.account);\n\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      replace: true,\n      to: \"/login\",\n      state: {\n        from: location\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (!((_role = role) !== null && _role !== void 0 && _role.some(r => {\n    var _user$roles;\n\n    return (_user$roles = user.roles) === null || _user$roles === void 0 ? void 0 : _user$roles.includes(r);\n  }))) {\n    toast.error(\"Not Authorize to access this\");\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      replace: true,\n      to: \"/catalog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this); // !user ? (\n  //   <Navigate replace to={\"/login\"} state={{ from: location }} />\n  // ) : (\n  //   <Outlet />\n  // );\n};\n\n_s(PrivateRoute, \"IG5QnsKtdhBIbAnZbjBW2h3ZVbg=\", false, function () {\n  return [useLocation, useAppSelector];\n});\n\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Navigate","Outlet","useLocation","toast","useAppSelector","PrivateRoute","roles","location","user","state","account","from","role","some","r","includes","error"],"sources":["D:/Project/client/src/App/Layout/PrivateRoute.tsx"],"sourcesContent":["import { Navigate, Outlet, RouteProps, useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useAppSelector } from \"../Store/ConfigureStore\";\r\n \r\n\r\ninterface Props extends RouteProps\r\n{\r\n  roles?:string[];\r\n}\r\n\r\nexport const PrivateRoute = ({roles}:Props) => {\r\n\r\n  const location = useLocation();\r\n  const { user } = useAppSelector((state) => state.account);\r\n \r\n\r\n    if(!user){\r\n      return <Navigate replace to={\"/login\"} state={{ from: location }} />\r\n    }\r\n    if(!role?.some(r => user.roles?.includes(r))){\r\n      toast.error(\"Not Authorize to access this\");\r\n      return <Navigate replace to={\"/catalog\"}/>\r\n    }\r\n    return <Outlet />\r\n   \r\n  // !user ? (\r\n  //   <Navigate replace to={\"/login\"} state={{ from: location }} />\r\n  // ) : (\r\n  //   <Outlet />\r\n  // );\r\n};"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAAuCC,WAAvC,QAA0D,kBAA1D;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,cAAT,QAA+B,yBAA/B;;AAQA,OAAO,MAAMC,YAAY,GAAG,QAAmB;EAAA;;EAAA;;EAAA,IAAlB;IAACC;EAAD,CAAkB;EAE7C,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;EACA,MAAM;IAAEM;EAAF,IAAWJ,cAAc,CAAEK,KAAD,IAAWA,KAAK,CAACC,OAAlB,CAA/B;;EAGE,IAAG,CAACF,IAAJ,EAAS;IACP,oBAAO,QAAC,QAAD;MAAU,OAAO,MAAjB;MAAkB,EAAE,EAAE,QAAtB;MAAgC,KAAK,EAAE;QAAEG,IAAI,EAAEJ;MAAR;IAAvC;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,IAAG,WAACK,IAAD,kCAAC,MAAMC,IAAN,CAAWC,CAAC;IAAA;;IAAA,sBAAIN,IAAI,CAACF,KAAT,gDAAI,YAAYS,QAAZ,CAAqBD,CAArB,CAAJ;EAAA,CAAZ,CAAD,CAAH,EAA6C;IAC3CX,KAAK,CAACa,KAAN,CAAY,8BAAZ;IACA,oBAAO,QAAC,QAAD;MAAU,OAAO,MAAjB;MAAkB,EAAE,EAAE;IAAtB;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,oBAAO,QAAC,MAAD;IAAA;IAAA;IAAA;EAAA,QAAP,CAb2C,CAe7C;EACA;EACA;EACA;EACA;AACD,CApBM;;GAAMX,Y;UAEMH,W,EACAE,c;;;KAHNC,Y"},"metadata":{},"sourceType":"module"}