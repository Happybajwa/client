{"ast":null,"code":"import { createAsyncThunk, isAnyOf } from '@reduxjs/toolkit';\nimport { createSlice } from '@reduxjs/toolkit';\nimport Agent from '../../App/Api/Agent';\nimport { history } from '../..';\nconst initialState = {\n  user: null\n};\nexport const signInUser = createAsyncThunk('/account/signInUser', async (data, thunkAPI) => {\n  try {\n    const user = await Agent.Account.login(data);\n    localStorage.setItem('user', JSON.stringify(user));\n    return user;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.data\n    });\n  }\n});\nexport const fetchCurrentUser = createAsyncThunk('/account/fetchCurrentUser', async (_, thunkAPI) => {\n  try {\n    const user = await Agent.Account.currentUser();\n    localStorage.setItem('user', JSON.stringify(user));\n    return user;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.data\n    });\n  }\n}, {\n  condition\n});\nexport const accountSlice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    signOut: state => {\n      state.user = null;\n      localStorage.removeItem('user');\n      history.push('./login');\n    }\n  },\n  extraReducers: builder => {\n    builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\n      state.user = action.payload;\n    });\n    builder.addMatcher(isAnyOf(signInUser.rejected, fetchCurrentUser.rejected), (state, action) => {\n      console.log(action.payload);\n    });\n  }\n});\nexport const {\n  signOut\n} = accountSlice.actions;","map":{"version":3,"names":["createAsyncThunk","isAnyOf","createSlice","Agent","history","initialState","user","signInUser","data","thunkAPI","Account","login","localStorage","setItem","JSON","stringify","error","rejectWithValue","fetchCurrentUser","_","currentUser","condition","accountSlice","name","reducers","signOut","state","removeItem","push","extraReducers","builder","addMatcher","fulfilled","action","payload","rejected","console","log","actions"],"sources":["D:/Project/client/src/Features/Account/AccountSlice.ts"],"sourcesContent":["import { FieldValues } from 'react-hook-form';\r\nimport { createAsyncThunk, isAnyOf } from '@reduxjs/toolkit';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport { User } from \"../../App/Models/User\";\r\nimport Agent from '../../App/Api/Agent';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { history } from '../..';\r\n\r\ninterface AccountState {\r\n    user: User | null;\r\n}\r\n\r\nconst initialState: AccountState = {\r\n    user: null\r\n}\r\n\r\nexport const signInUser = createAsyncThunk<User, FieldValues>(\r\n    '/account/signInUser',\r\n    async (data, thunkAPI) => {\r\n        try {\r\n            const user = await Agent.Account.login(data);\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        }\r\n        catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    }\r\n)\r\n\r\nexport const fetchCurrentUser = createAsyncThunk(\r\n    '/account/fetchCurrentUser',\r\n    async (_, thunkAPI) => {\r\n        try {\r\n            const user = await Agent.Account.currentUser();\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n            return user;\r\n        }\r\n        catch (error: any) {\r\n            return thunkAPI.rejectWithValue({ error: error.data })\r\n        }\r\n    },\r\n    {\r\n        condition\r\n    }\r\n)\r\n\r\nexport const accountSlice = createSlice({\r\n    name: 'account',\r\n    initialState,\r\n    reducers: {\r\n        signOut:(state) => {\r\n            state.user = null;\r\n            localStorage.removeItem('user');\r\n            history.push('./login')\r\n        }\r\n    },\r\n    extraReducers: (builder => {\r\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled),\r\n            (state, action) => {\r\n                state.user = action.payload\r\n            });\r\n        builder.addMatcher(isAnyOf(signInUser.rejected, fetchCurrentUser.rejected),\r\n            (state, action) => {\r\n                console.log(action.payload)\r\n            });\r\n    })\r\n})\r\n\r\nexport const {signOut} = accountSlice.actions;"],"mappings":"AACA,SAASA,gBAAT,EAA2BC,OAA3B,QAA0C,kBAA1C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,SAASC,OAAT,QAAwB,OAAxB;AAMA,MAAMC,YAA0B,GAAG;EAC/BC,IAAI,EAAE;AADyB,CAAnC;AAIA,OAAO,MAAMC,UAAU,GAAGP,gBAAgB,CACtC,qBADsC,EAEtC,OAAOQ,IAAP,EAAaC,QAAb,KAA0B;EACtB,IAAI;IACA,MAAMH,IAAI,GAAG,MAAMH,KAAK,CAACO,OAAN,CAAcC,KAAd,CAAoBH,IAApB,CAAnB;IACAI,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAA7B;IACA,OAAOA,IAAP;EACH,CAJD,CAKA,OAAOU,KAAP,EAAmB;IACf,OAAOP,QAAQ,CAACQ,eAAT,CAAyB;MAAED,KAAK,EAAEA,KAAK,CAACR;IAAf,CAAzB,CAAP;EACH;AACJ,CAXqC,CAAnC;AAcP,OAAO,MAAMU,gBAAgB,GAAGlB,gBAAgB,CAC5C,2BAD4C,EAE5C,OAAOmB,CAAP,EAAUV,QAAV,KAAuB;EACnB,IAAI;IACA,MAAMH,IAAI,GAAG,MAAMH,KAAK,CAACO,OAAN,CAAcU,WAAd,EAAnB;IACAR,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAA7B;IACA,OAAOA,IAAP;EACH,CAJD,CAKA,OAAOU,KAAP,EAAmB;IACf,OAAOP,QAAQ,CAACQ,eAAT,CAAyB;MAAED,KAAK,EAAEA,KAAK,CAACR;IAAf,CAAzB,CAAP;EACH;AACJ,CAX2C,EAY5C;EACIa;AADJ,CAZ4C,CAAzC;AAiBP,OAAO,MAAMC,YAAY,GAAGpB,WAAW,CAAC;EACpCqB,IAAI,EAAE,SAD8B;EAEpClB,YAFoC;EAGpCmB,QAAQ,EAAE;IACNC,OAAO,EAAEC,KAAD,IAAW;MACfA,KAAK,CAACpB,IAAN,GAAa,IAAb;MACAM,YAAY,CAACe,UAAb,CAAwB,MAAxB;MACAvB,OAAO,CAACwB,IAAR,CAAa,SAAb;IACH;EALK,CAH0B;EAUpCC,aAAa,EAAGC,OAAO,IAAI;IACvBA,OAAO,CAACC,UAAR,CAAmB9B,OAAO,CAACM,UAAU,CAACyB,SAAZ,EAAuBd,gBAAgB,CAACc,SAAxC,CAA1B,EACI,CAACN,KAAD,EAAQO,MAAR,KAAmB;MACfP,KAAK,CAACpB,IAAN,GAAa2B,MAAM,CAACC,OAApB;IACH,CAHL;IAIAJ,OAAO,CAACC,UAAR,CAAmB9B,OAAO,CAACM,UAAU,CAAC4B,QAAZ,EAAsBjB,gBAAgB,CAACiB,QAAvC,CAA1B,EACI,CAACT,KAAD,EAAQO,MAAR,KAAmB;MACfG,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACC,OAAnB;IACH,CAHL;EAIH;AAnBmC,CAAD,CAAhC;AAsBP,OAAO,MAAM;EAACT;AAAD,IAAYH,YAAY,CAACgB,OAA/B"},"metadata":{},"sourceType":"module"}