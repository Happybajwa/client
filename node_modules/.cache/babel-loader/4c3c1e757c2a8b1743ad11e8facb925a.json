{"ast":null,"code":"import axios from 'axios';\nimport { toast } from 'react-toastify';\naxios.defaults.baseURL = 'http://localhost:5000/api/';\n\nconst responseBody = response => response.data;\n\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  const {\n    data,\n    status\n  } = error.message;\n\n  switch (status) {\n    case 400:\n      toast.error(data.title);\n      break;\n\n    case 401:\n      toast.error(data.title);\n      break;\n\n    case 401:\n      toast.error(data.title);\n      break;\n  }\n\n  return Promise.reject(error.response);\n});\nconst requests = {\n  get: url => axios.get(url).then(responseBody),\n  post: (url, body) => axios.post(url, body).then(responseBody),\n  put: (url, body) => axios.put(url, body).then(responseBody),\n  delete: url => axios.delete(url).then(responseBody)\n};\nconst Catalog = {\n  list: () => requests.get('products'),\n  details: id => requests.get(`products/${id}`)\n};\nconst TestErrors = {\n  get400Error: () => requests.get('buggy/bad-request'),\n  get401Error: () => requests.get('buggy/unauthorized'),\n  get404Error: () => requests.get('buggy/not-found'),\n  get500Error: () => requests.get('buggy/server-error'),\n  getValidationError: () => requests.get('buggy/validation-error')\n};\nconst Agent = {\n  Catalog,\n  TestErrors\n};\nexport default Agent;","map":{"version":3,"names":["axios","toast","defaults","baseURL","responseBody","response","data","interceptors","use","error","status","message","title","Promise","reject","requests","get","url","then","post","body","put","delete","Catalog","list","details","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","Agent"],"sources":["D:/Project/client/src/App/Api/Agent.ts"],"sourcesContent":["import  axios, { AxiosError, AxiosResponse }  from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL  = 'http://localhost:5000/api/';\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\naxios.interceptors.response.use(response => {\r\n    return response\r\n}, (error:AxiosError) => {\r\n    const{data, status} = error.message;\r\n    switch(status){\r\n        case 400:\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n        case 401:\r\n            toast.error(data.title);\r\n            break;\r\n    }\r\n    return Promise.reject(error.response);\r\n});\r\n\r\nconst requests = {\r\n    get: (url:string) => axios.get(url).then(responseBody),\r\n    post: (url:string, body:{}) => axios.post(url, body).then(responseBody),\r\n    put: (url:string, body:{}) => axios.put(url, body).then(responseBody),\r\n   delete: (url:string) => axios.delete(url).then(responseBody),\r\n\r\n}\r\n\r\nconst Catalog = {\r\n    list: () => requests.get('products'),\r\n    details: (id: number) => requests.get(`products/${id}`)\r\n}\r\n\r\nconst TestErrors = {\r\n    get400Error:() => requests.get('buggy/bad-request'),\r\n    get401Error:() => requests.get('buggy/unauthorized'),\r\n    get404Error:() => requests.get('buggy/not-found'),\r\n    get500Error:() => requests.get('buggy/server-error'),\r\n    getValidationError:() => requests.get('buggy/validation-error'),\r\n}\r\n\r\nconst Agent = {\r\n    Catalog,\r\n    TestErrors\r\n}\r\n\r\nexport default Agent;"],"mappings":"AAAA,OAAQA,KAAR,MAAmD,OAAnD;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAA0B,4BAA1B;;AAEA,MAAMC,YAAY,GAAIC,QAAD,IAA6BA,QAAQ,CAACC,IAA3D;;AAEAN,KAAK,CAACO,YAAN,CAAmBF,QAAnB,CAA4BG,GAA5B,CAAgCH,QAAQ,IAAI;EACxC,OAAOA,QAAP;AACH,CAFD,EAEII,KAAD,IAAsB;EACrB,MAAK;IAACH,IAAD;IAAOI;EAAP,IAAiBD,KAAK,CAACE,OAA5B;;EACA,QAAOD,MAAP;IACI,KAAK,GAAL;MACIT,KAAK,CAACQ,KAAN,CAAYH,IAAI,CAACM,KAAjB;MACA;;IACJ,KAAK,GAAL;MACIX,KAAK,CAACQ,KAAN,CAAYH,IAAI,CAACM,KAAjB;MACA;;IACJ,KAAK,GAAL;MACIX,KAAK,CAACQ,KAAN,CAAYH,IAAI,CAACM,KAAjB;MACA;EATR;;EAWA,OAAOC,OAAO,CAACC,MAAR,CAAeL,KAAK,CAACJ,QAArB,CAAP;AACH,CAhBD;AAkBA,MAAMU,QAAQ,GAAG;EACbC,GAAG,EAAGC,GAAD,IAAgBjB,KAAK,CAACgB,GAAN,CAAUC,GAAV,EAAeC,IAAf,CAAoBd,YAApB,CADR;EAEbe,IAAI,EAAE,CAACF,GAAD,EAAaG,IAAb,KAAyBpB,KAAK,CAACmB,IAAN,CAAWF,GAAX,EAAgBG,IAAhB,EAAsBF,IAAtB,CAA2Bd,YAA3B,CAFlB;EAGbiB,GAAG,EAAE,CAACJ,GAAD,EAAaG,IAAb,KAAyBpB,KAAK,CAACqB,GAAN,CAAUJ,GAAV,EAAeG,IAAf,EAAqBF,IAArB,CAA0Bd,YAA1B,CAHjB;EAIdkB,MAAM,EAAGL,GAAD,IAAgBjB,KAAK,CAACsB,MAAN,CAAaL,GAAb,EAAkBC,IAAlB,CAAuBd,YAAvB;AAJV,CAAjB;AAQA,MAAMmB,OAAO,GAAG;EACZC,IAAI,EAAE,MAAMT,QAAQ,CAACC,GAAT,CAAa,UAAb,CADA;EAEZS,OAAO,EAAGC,EAAD,IAAgBX,QAAQ,CAACC,GAAT,CAAc,YAAWU,EAAG,EAA5B;AAFb,CAAhB;AAKA,MAAMC,UAAU,GAAG;EACfC,WAAW,EAAC,MAAMb,QAAQ,CAACC,GAAT,CAAa,mBAAb,CADH;EAEfa,WAAW,EAAC,MAAMd,QAAQ,CAACC,GAAT,CAAa,oBAAb,CAFH;EAGfc,WAAW,EAAC,MAAMf,QAAQ,CAACC,GAAT,CAAa,iBAAb,CAHH;EAIfe,WAAW,EAAC,MAAMhB,QAAQ,CAACC,GAAT,CAAa,oBAAb,CAJH;EAKfgB,kBAAkB,EAAC,MAAMjB,QAAQ,CAACC,GAAT,CAAa,wBAAb;AALV,CAAnB;AAQA,MAAMiB,KAAK,GAAG;EACVV,OADU;EAEVI;AAFU,CAAd;AAKA,eAAeM,KAAf"},"metadata":{},"sourceType":"module"}